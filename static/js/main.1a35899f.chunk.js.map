{"version":3,"sources":["useIsNoticeList.tsx","NarouLoginForm.tsx","NarouUpdates.tsx","NarouApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["clearCache","mutate","ascend","a","b","f","fa","fb","useIsNoticeList","api","enableR18","maxPage","query","useSWR","path","call","onErrorRetry","error","console","log","status","raw_items","data","raw_items18","error18","items","useMemo","undefined","map","i","isR18","update_time","DateTime","fromISO","sort","cmps","c","compare","bookmark","latest","Number","MAX_SAFE_INTEGER","score","base_url","slice","NarouLoginForm","props","useState","userId","setUserId","password","setPassword","setError","postLogin","useCallback","login","res","ok","text","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","title","CardContent","Box","display","flexDirection","justifyContent","TextField","id","name","label","value","onChange","e","target","onKeyPress","key","type","inputRef","CardActions","style","variant","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","nextLink","item","itemSummary","fields","hasUnread","push","completed","join","unread","Math","max","badgeProps","badgeContent","OpenConfirmDialog","author_name","window","NarouUpdateList","server","onUnauthorized","classes","setEnableR18","setMaxPage","unreads","filter","length","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoView","behavior","scrollMode","index","defaultRef","onKeyDown","event","len","preventDefault","addEventListener","removeEventListener","buttonProps","component","href","JSON","stringify","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","m","disabled","bgcolor","List","ListItem","button","selected","ref","disableRipple","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","NarouApi","this","replace","fetch","credentials","formData","FormData","append","method","body","json","App","prefersDarkMode","useMediaQuery","createMuiTheme","palette","cyan","setApi","location","host","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","CssBaseline","refreshInterval","bottom","right","fontSize","fontStyle","toISO","Typography","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a35899f.chunk.js","sourcesContent":["import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1 }: { enableR18: boolean, maxPage: number }\n) {\n  const query = `?max_page=${maxPage}`\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>('/narou/isnoticelist' + query,\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? '/r18/isnoticelist' + query : null,\n    async path => api.call(path),\n  );\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const score = (i: IsNoticeListItem) => {\n        if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n        if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n        return i.latest - i.bookmark;\n      }\n\n      // なろう、R18のアイテムを混ぜて、未読があって少ない順にし、\n      // 未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n        .slice(0, 30);\n      return n;\n    },\n    [raw_items, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AppBar, Avatar, Backdrop, Badge, BadgeTypeMap, Box, Button, CircularProgress, createStyles, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Switch, Theme, Toolbar } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { clearCache, IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction itemSummary(item: IsNoticeListItem): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction OpenConfirmDialog({ item, onClose }: { item?: IsNoticeListItem, onClose: () => void }) {\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:{item?.author_name}</DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(1);\n\n  const { data: items, error } = useIsNoticeList(server, { enableR18, maxPage });\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : 0, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads}`;\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    const index = items && items.length > 0 && unread(items[0]) > 0 ? 0 : -1;\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  const defaultRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n          case 'Escape':\n            setSelectedIndex(defaultIndex);\n            break;\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, defaultIndex, items]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { onClick: () => setConfirm(item) };\n    }\n  }, [setConfirm]);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                  inputRef={defaultRef}\n                />}\n            />\n          </Box>\n          <Box>\n            <FormControlLabel\n              label={`${maxPage}頁`}\n              control={\n                <Switch\n                  checked={maxPage > 1}\n                  onChange={event => setMaxPage(event.target.checked ? 2 : 1)}\n                />}\n            />\n          </Box>\n          <Box m={2}>未読: {unreads}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={defaultIndex === selectedIndex}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <List>\n          {items?.map((item, index) =>\n            <ListItem key={item.base_url} button={true}\n              {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n              disableRipple={true}\n              onFocusVisible={() => setSelectedIndex(index)}\n              {...buttonProps(item)} >\n              <ListItemAvatar>\n                <Badge overlap=\"circle\" {...badgeProps(item)} >\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={itemSummary(item)}\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n            </ListItem>)}\n        </List>\n      </Box >\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","type Api = '/narou/login' | '/narou/logout' | '/narou/isnoticelist' | '/r18/isnoticelist';\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    async fetch(api: Api): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(api: '/narou/isnoticelist' | '/r18/isnoticelist') {\n        const res = await this.fetch(api);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n}","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    setApi(host ? new NarouApi(host) : null);\n  }, [])\n\n  if (!api) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        <NarouUpdates api={api} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}