{"version":3,"sources":["useIsNoticeList.tsx","NarouLoginForm.tsx","NarouUpdates.tsx","NarouApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["clearCache","mutate","ascend","a","b","f","fa","fb","useIsNoticeList","api","enableR18","maxPage","bookmark1","query","useSWR","path","call","onErrorRetry","error","console","log","status","raw_items","data","bookmark_items","bookmark_error","raw_items18","error18","raw_items2","useMemo","keys","Set","map","i","base_url","adds","filter","is_notice","has","length","items","undefined","isR18","update_time","DateTime","fromISO","sort","cmps","c","compare","bookmark","latest","Number","MAX_SAFE_INTEGER","score","slice","NarouLoginForm","props","useState","userId","setUserId","password","setPassword","setError","postLogin","useCallback","login","res","ok","text","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","title","CardContent","Box","display","flexDirection","justifyContent","TextField","id","name","label","value","onChange","e","target","onKeyPress","key","type","inputRef","CardActions","style","variant","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","nextLink","item","itemSummary","fields","hasUnread","push","completed","join","unread","Math","max","badgeProps","badgeContent","useNovelInfo","m","match","host","ncode","novelInfoPath","OpenConfirmDialog","Link","href","author_url","author_name","size","window","maxPageValue","sw","NarouUpdateList","server","onUnauthorized","classes","setEnableR18","setMaxPage","setBookmark1","unreads","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoView","behavior","scrollMode","index","defaultRef","onKeyDown","event","len","preventDefault","v","addEventListener","removeEventListener","buttonProps","component","JSON","stringify","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disabled","disableRipple","ref","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","NarouApi","this","replace","fetch","credentials","formData","FormData","append","method","body","json","App","prefersDarkMode","useMediaQuery","createMuiTheme","palette","cyan","setApi","hostError","setHostError","location","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","CssBaseline","refreshInterval","bottom","right","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6aA4BO,SAASA,IACdC,YAAO,uBACPA,YAAO,qBAIT,SAASC,EAAUC,EAAMC,EAAMC,GAC7B,IAAMC,EAAKD,EAAEF,GAAII,EAAKF,EAAED,GACxB,OAAIE,EAAKC,GAAY,EACjBD,EAAKC,EAAW,EACb,EAuBF,SAASC,EACdC,EADK,GAQJ,IANCC,EAMF,EANEA,UAMF,IANaC,eAMb,MANuB,EAMvB,MAN0BC,iBAM1B,SACMC,EAAK,oBAAgBF,GAD3B,EAEmCG,YAA6B,sBAAwBD,EAA/C,uCACvC,WAAME,GAAN,SAAAZ,EAAA,+EAAcM,EAAIO,KAAKD,IAAvB,2CADuC,sDAEvC,CACEE,aAAc,SAACC,GACbC,QAAQC,IAAI,gBAAiBF,EAAOA,EAAMG,WAJlCC,EAFd,EAEQC,KAAiBL,EAFzB,EAEyBA,MAFzB,EAawDJ,aAA+BI,GAASN,EAAX,2BAFpE,EAEoE,kBADjD,OACyH,KAA/F,uCAC5D,WAAMG,GAAN,SAAAZ,EAAA,+EAAcM,EAAIO,KAAKD,IAAvB,2CAD4D,uDAAhDS,EAbd,EAaQD,KAA6BE,EAbrC,EAa8BP,MAb9B,EAiB8CJ,aAA+BI,GAASR,EAAa,oBAAsBG,EAAQ,KAA7E,uCAClD,WAAME,GAAN,SAAAZ,EAAA,+EAAcM,EAAIO,KAAKD,IAAvB,2CADkD,uDAAtCW,EAjBd,EAiBQH,KAA0BI,EAjBlC,EAiB2BT,MAKrBU,EAAaC,mBAAQ,WACzB,GAAIP,GACEE,EAAgB,CAClB,IAAMM,EAAO,IAAIC,IAAIT,EAAUU,KAAI,SAAAC,GAAC,OAAIA,EAAEC,aACpCC,EAAOX,EAAeY,QAAO,SAAAH,GAAC,OAAIA,EAAEI,YAAcP,EAAKQ,IAAIL,EAAEC,aACnE,GAAIC,EAAKI,OAAS,EAChB,MAAM,GAAN,mBAAWjB,GAAX,YAAyBa,IAI/B,OAAOb,IACN,CAACA,EAAWE,IAETgB,EAAwCX,mBAC5C,WACE,QAAmBY,IAAfb,EAAJ,CAyBA,MAbU,sBACLA,EAAWI,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaS,OAAO,QAD/B,aAEJhB,GAAe,IAAIM,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaS,OAAO,SAChDV,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaU,YAAaC,WAASC,QAAQZ,EAAEU,kBACjDG,MAAK,SAAC3C,EAAGC,GACR,OA3EV,SAAoBD,EAAMC,GAA8D,IAAD,uBAApD2C,EAAoD,iCAApDA,EAAoD,kBACrF,cAAgBA,EAAhB,eAAsB,CAAjB,IAAM1C,EAAC,KACN2C,OAAC,EAML,GAJEA,EADe,kBAAN3C,EACLH,EAAOE,EAAGD,EAAIE,EAAiBA,GAE/BH,EAAOC,EAAGC,EAAGC,GAEZ,OAAO2C,EAEhB,OAAO,EAiEQC,CAAQ9C,EAAGC,GAChB,SAAA6B,GAAC,OAdO,SAACA,GACb,OAAIA,EAAEiB,WAAajB,EAAEkB,OAAeC,OAAOC,iBACvCpB,EAAEiB,SAAWjB,EAAEkB,OAAeC,OAAOC,iBAAmB,EACrDpB,EAAEkB,OAASlB,EAAEiB,SAWXI,CAAMrB,KACX9B,EAAE+C,SAAW/C,EAAEgD,OACb,SAAAlB,GAAC,OAAIA,EAAEU,aAjFZ,CAAEtC,EAkFW,SAAA4B,GAAC,OAAIA,EAAEU,eACjB,SAAAV,GAAC,OAAIA,EAAEC,eAEVqB,MAAM,EAAG,OAGd,CAAC3B,EAAYF,IAGf,MAAO,CAAEH,KAAML,OAAQuB,EAAYD,EAAOtB,MAAOA,GAASS,GAAWF,G,iECpIhE,SAAS+B,EAAeC,GAAiD,IAAD,EACjDC,mBAAS,IADwC,mBACtEC,EADsE,KAC9DC,EAD8D,OAE7CF,mBAAS,IAFoC,mBAEtEG,EAFsE,KAE5DC,EAF4D,OAGnDJ,mBAAiB,IAHkC,mBAGtExC,EAHsE,KAG/D6C,EAH+D,KAKvEC,EAAYC,sBAAW,sBAAC,8BAAA9D,EAAA,sEACAsD,EAAMhD,IAAIyD,MAAMP,EAAQE,GADxB,WACtBM,EADsB,QAEnBC,GAFmB,iCAGPD,EAAIE,OAHG,OAGpBA,EAHoB,OAI1BN,EAAS,GAAD,OAAII,EAAI9C,OAAR,YAAkB8C,EAAIG,WAAtB,aAAqCD,IAJnB,wBAM1BZ,EAAMc,UANoB,4CAQ3B,CAACZ,EAAQE,EAAUJ,IAEhBe,EAAcC,mBAEdC,EAAaT,uBAAY,WAAO,IAAD,EACnCF,EAAS,IACT,UAAAS,EAAYG,eAAZ,SAAqBC,UACpB,IAEH,OAAQ,qCACN,eAACC,EAAA,EAAD,CAAQC,KAAgB,KAAV5D,EAAc6D,QAAS,kBAAML,KAA3C,UACE,cAACM,EAAA,EAAD,uFACA,cAACC,EAAA,EAAD,UACE,8BAAM/D,MAER,cAACgE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,QAAS,kBAAMX,KAAjC,qBAGJ,cAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,QAAQ,EAAd,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,yFAElB,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,eAAe,SAA1D,UACE,cAACC,EAAA,EAAD,CAAWC,GAAG,KAAKC,KAAK,KAAKC,MAAM,cAAchB,WAAS,EACxDiB,MAAO1C,EAAQ2C,SAAU,SAAAC,GAAC,OAAI3C,EAAU2C,EAAEC,OAAOH,QACjDI,WAAY,SAAAF,GACc,IAAD,EAAT,UAAVA,EAAEG,MACJ,UAAAlC,EAAYG,eAAZ,SAAqBC,YAG3B,cAACqB,EAAA,EAAD,CAAWC,GAAG,WAAWC,KAAK,WAAWC,MAAM,WAAWO,KAAK,WAC7DN,MAAOxC,EAAUyC,SAAU,SAAAC,GAAC,OAAIzC,EAAYyC,EAAEC,OAAOH,QACrDO,SAAUpC,EAAaiC,WAAY,SAAAF,GACnB,UAAVA,EAAEG,KACJ1C,YAKV,cAAC6C,EAAA,EAAD,CAAaC,MAAO,CAAEd,eAAgB,UAAtC,SACE,cAACb,EAAA,EAAD,CAAQ4B,QAAQ,YAAY1B,QAASrB,EAArC,6B,YC1BJgD,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,SAAU,CACRC,OAAQH,EAAMG,OAAOC,OAAS,EAC9BC,MAAO,aAKb,SAASC,EAASC,GAChB,OAAIA,EAAKvE,UAAYuE,EAAKtE,OAClB,GAAN,OAAUsE,EAAKvF,UAAf,OAA0BuF,EAAKtE,OAA/B,KAEI,GAAN,OAAUsE,EAAKvF,UAAf,OAA0BuF,EAAKvE,SAAW,EAA1C,KAOF,SAASwE,EAAYD,GACnB,IAAME,EAAS,CAACF,EAAK9B,MAAO,MAQ5B,OAbF,SAAmB8B,GACjB,OAAOA,EAAKtE,OAASsE,EAAKvE,SAKtB0E,CAAUH,IACZE,EAAOE,KAAP,UAAeJ,EAAKvE,SAApB,MAEFyE,EAAOE,KAAP,UAAeJ,EAAKtE,OAApB,MACIsE,EAAKK,WACPH,EAAOE,KAAK,kBAEPF,EAAOI,KAAK,IAGrB,SAASC,EAAOP,GACd,OAAOQ,KAAKC,IAAIT,EAAKtE,OAASsE,EAAKvE,SAAU,GAG/C,SAASiF,EAAWV,GAClB,OAAIA,EAAKtE,OAASsE,EAAKvE,SACd,CAAEqE,MAAO,YAAaa,aAAc,KAEtC,CAAEb,MAAO,UAAWa,aAAcJ,EAAOP,IAmClD,SAASY,GACP5H,EACAyB,GACC,IAAD,EACwBpB,YA1B1B,SAAuBoB,GACrB,IAAKA,EACH,OAAO,KAGT,IAAMoG,EAAIpG,EAASqG,MAAM,0CACzB,IAAKD,EAEH,OAAO,KAR8C,kBAU/BA,EAV+B,GAU9CE,EAV8C,KAUxCC,EAVwC,KAWvD,OAAQD,GACN,IAAK,oBACH,MAAM,iBAAN,OAAwBC,GAC1B,IAAK,sBACH,MAAM,eAAN,OAAsBA,GACxB,QAEE,OAAO,MASTC,CAAcxG,GADc,uCAE5B,WAAMnB,GAAN,SAAAZ,EAAA,+EAAcM,EAAIO,KAAKD,IAAvB,2CAF4B,uDAK9B,MAAO,CAAEQ,KANT,EACQA,KAKOL,MANf,EACcA,OAQhB,SAASyH,GAAT,GAII,IAJyBlI,EAI1B,EAJ0BA,IAAKgH,EAI/B,EAJ+BA,KAAM1C,EAIrC,EAJqCA,QAK9BxD,EAAS8G,GAAa5H,EAAD,OAAMgH,QAAN,IAAMA,OAAN,EAAMA,EAAMvF,UAAjCX,KACR,OACE,eAACsD,EAAA,EAAD,CAAQC,OAAQ2C,EAAM1C,QAASA,EAA/B,UACE,cAACC,EAAA,EAAD,iBAAcyC,QAAd,IAAcA,OAAd,EAAcA,EAAM9B,QACpB,eAACV,EAAA,EAAD,2BAAkB,cAAC2D,EAAA,EAAD,CAAMC,KAAI,OAAEtH,QAAF,IAAEA,OAAF,EAAEA,EAAMuH,WAAYtC,OAAO,SAArC,gBAA+CiB,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAMsB,iBACvE,eAAC7D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQ6D,KAAK,QAAQjC,QAAQ,YAAY1B,QAAS,WAC5CoC,GAAMwB,OAAOnE,KAAK2C,EAAKvF,SAAU,UACrC6C,KAFF,4CAIA,eAACI,EAAA,EAAD,CAAQ6D,KAAK,QAAQjC,QAAQ,YAAY1B,QAAS,WAC5CoC,GAAMwB,OAAOnE,KAAK0C,EAASC,GAAO,UACtC1C,KAFF,gCAGM0C,QAHN,IAGMA,OAHN,EAGMA,EAAMtE,OAHZ,kBAIA,cAACgC,EAAA,EAAD,CAAQ6D,KAAK,QAAQjC,QAAQ,YAAY1B,QAAS,kBAAMN,KAAxD,kDAOR,SAASmE,GAAaC,GACpB,OAAOA,EAAK,EAAI,EAGlB,SAASC,GAAT,GAAwG,IAA7EC,EAA4E,EAA5EA,OAAQC,EAAoE,EAApEA,eAC3BC,EAAUvC,IADqF,EAGnEtD,oBAAS,GAH0D,mBAG9FhD,EAH8F,KAGnF8I,EAHmF,OAIvE9F,mBAASwF,IAAa,IAJiD,mBAI9FvI,EAJ8F,KAIrF8I,EAJqF,OAKnE/F,oBAAS,GAL0D,mBAK9F9C,EAL8F,KAKnF8I,EALmF,OAOtElJ,EAAgB6I,EAAQ,CAAE3I,YAAWC,UAASC,cAA/D4B,EAPuF,EAO7FjB,KAAaL,EAPgF,EAOhFA,MAEfyI,EAAU9H,mBAAQ,kBAAMW,EAAQA,EAAMJ,QAAO,SAAAH,GAAC,OAAIA,EAAEiB,SAAWjB,EAAEkB,UAAQZ,OAAS,OAAM,CAACC,IATM,EAWvEkB,wBAAuCjB,GAXgC,mBAW9FmH,EAX8F,KAWrFC,EAXqF,OAa3DnG,oBAAU,GAbiD,mBAa9FoG,EAb8F,KAa/EC,EAb+E,QAc7DrG,oBAAU,GAdmD,qBAc9FsG,GAd8F,MAchFC,GAdgF,MAgBrGC,qBAAU,WACQ,OAAZP,IACFQ,SAASxE,MAAT,0CAA2BgE,MAE5B,CAACA,IAEJ,IAAMS,GAAWnG,uBAAY,SAAAoG,GACvBA,IACFC,YAAeD,EAAM,CAAEE,SAAU,SAAUC,WAAY,cACvDH,EAAKzF,WAEN,IAEHsF,qBAAU,WACRH,GAAkB,KACjB,CAACrJ,EAAWC,IAEfuJ,qBAAU,WACR,IAAMO,EAAQjI,GAASA,EAAMD,OAAS,GAAKyF,EAAOxF,EAAM,IAAM,EAAI,GAAK,EAEvEyH,GAAgBQ,GAChBV,EAAiBU,KAChB,CAACjI,IAEJ,IAAMkI,GAAajG,iBAA0B,MAE7CyF,qBAAU,WACmB,IAAD,GAAH,IAAnBJ,IACF,UAAAY,GAAW/F,eAAX,SAAoBC,WAErB,CAACkF,IAEJI,qBAAU,WACR,GAAI1H,EAAO,CACT,IAAMmI,EAAY,SAACC,GACjB,IAAMC,EAAMrI,EAAMD,OAClB,OAAQqI,EAAMlE,KACZ,IAAK,UACCoD,EAAgB,GAClBc,EAAME,iBAERf,GAAiB,SAAA9H,GAAC,OAAIA,EAAI,EAAIA,EAAI,EAAI,KACtC,MACF,IAAK,YACC6H,EAAgBe,EAAM,GACxBD,EAAME,iBAERf,GAAiB,SAAA9H,GAAC,OAAIA,EAAI4I,EAAM5I,EAAI,EAAI4I,EAAM,KAC9C,MACF,IAAK,OACHd,EAAiB,GACjB,MACF,IAAK,MACHA,EAAiBc,EAAM,GACvB,MACF,IAAK,SACHd,EAAiBC,IACjB,MACF,IAAK,IACHR,GAAa,SAAAuB,GAAC,OAAKA,KACnB,MACF,IAAK,IACHrB,GAAa,SAAAqB,GAAC,OAAKA,KACnB,MACF,IAAK,IACHtB,GAAW,SAAAsB,GAAC,OAAI7B,GAAa6B,IAAM7B,IAAa,SAMtD,OADAiB,SAASa,iBAAiB,UAAWL,GAAW,GACzC,WACLR,SAASc,oBAAoB,UAAWN,OAG3C,CAACb,EAAeE,GAAcxH,IAEjC,IAAM0I,GAAcjH,uBAAY,SAACwD,GAC/B,OAAIO,EAAOP,GAAQ,EACV,CACL0D,UAAW,IACXtC,KAAMrB,EAASC,GACfpC,QAAS,kBAAM0E,GAAkB,IACjCvD,OAAQ,UAGH,CAAEnB,QAAS,kBAAMwE,EAAWpC,OAEpC,CAACoC,IAEJ,OAAI3I,GACFC,QAAQC,IAAI,UAAWF,GACF,MAAjBA,EAAMG,QACRiI,IAEK,0CAAa8B,KAAKC,UAAUhC,GAA5B,iCAAmEnI,EAAMG,WAE7EmB,EAOH,qCACE,cAACmG,GAAD,CAAmBlI,IAAK4I,EAAQ5B,KAAMmC,EAAS7E,QAAS,kBAAM8E,OAAWpH,MACzE,cAAC6I,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC3F,EAAA,EAAD,UACE,cAAC4F,EAAA,EAAD,CACErF,MAAM,MACNsF,QACE,cAACC,EAAA,EAAD,CACEC,QAASlL,EACT4F,SAAU,SAAAsE,GAAK,OAAIpB,EAAaoB,EAAMpE,OAAOoF,gBAIrD,cAAC/F,EAAA,EAAD,UACE,cAAC4F,EAAA,EAAD,CACErF,MAAM,MACNsF,QACE,cAACC,EAAA,EAAD,CACEC,QAAShL,EACT0F,SAAU,SAAAsE,GAAK,OAAIlB,EAAakB,EAAMpE,OAAOoF,gBAIrD,eAAC/F,EAAA,EAAD,CAAKyC,EAAG,EAAR,kCAAgBqB,QAAhB,IAAgBA,IAAW,MAC3B,cAACxE,EAAA,EAAD,CACE4B,QAAQ,YACR8E,SAA4B,IAAlB/B,EACVgC,eAAe,EACfC,IAAKrB,GACLrF,QAAS,kBAAM0E,EAAiBC,KALlC,sBAQJ,cAACnE,EAAA,EAAD,CAAKyC,EAAG,EAAGxC,QAAQ,OAAOC,cAAc,SAASiG,QAAQ,mBAAzD,SACE,cAACC,EAAA,EAAD,iBACGzJ,QADH,IACGA,OADH,EACGA,EAAOR,KAAI,SAACyF,EAAMgD,GAAP,OACV,eAACyB,EAAA,EAAD,qCAA8BC,QAAQ,GAC/B1B,IAAUX,EAAgB,CAAEsC,UAAU,EAAML,IAAK3B,IAAa,IADrE,IAEE0B,eAAe,EACfO,eAAgB,kBAAMtC,EAAiBU,KACnCS,GAAYzD,IAJlB,cAKE,cAAC6E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,yBAAOC,QAAQ,UAAarE,EAAWV,IAAvC,aACE,cAACgF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMnF,MAAOE,EAAK/E,MAAQ,iBAAcD,WAI9C,cAACkK,EAAA,EAAD,CACEC,QAASlF,EAAYD,GACrBoF,UAAS,UAAKpF,EAAK9E,YAAYmK,SAAS,oBAA/B,uCAA6DrF,EAAKsB,kBAdhEtB,EAAKvF,oBA1CrB,cAAC6K,EAAA,EAAD,CAAUC,UAAWzD,EAAQnC,SAAUtC,MAAM,EAA7C,SACL,cAACmI,EAAA,EAAD,CAAkB1F,MAAM,cA+DvB,SAAS2F,GAAT,GAAmD,IAA3BzM,EAA0B,EAA1BA,IAA0B,EACrBiD,oBAAS,GADY,mBAChDyJ,EADgD,KACrCC,EADqC,KAGvD,OAAID,EACK,cAAC3J,EAAD,CAAgB/C,IAAKA,EAAK8D,QAAS,WACxCpD,QAAQC,IAAI,cACZpB,IACAoN,GAAa,MAKf,qCACE,cAAChE,GAAD,CAAiBC,OAAQ5I,EACvB6I,eAAgB,WACdtJ,IACAoN,GAAa,MAEjB,cAACjI,EAAA,EAAD,CAAQE,QAAO,sBAAE,sBAAAlF,EAAA,sEACTM,EAAI4M,SADK,OAEfrN,IACAoN,GAAa,GAHE,2CAAjB,uB,sECxVOE,GAAb,WAGI,WAAYjE,GAAiB,0BAFrBA,YAEoB,EACxBkE,KAAKlE,OAASA,EAAOmE,QAAQ,MAAO,IAJ5C,+LAOI,WAAY/M,GAAZ,SAAAN,EAAA,+EACWsN,MAAM,GAAD,OAAIF,KAAKlE,QAAT,OAAkB5I,GAAO,CACjCiN,YAAa,aAFrB,gDAPJ,kHAaI,WAAYxH,EAAYrC,GAAxB,iBAAA1D,EAAA,6DACUwN,EAAW,IAAIC,UACZC,OAAO,KAAM3H,GACtByH,EAASE,OAAO,WAAYhK,GAHhC,SAIgC4J,MAAM,GAAD,OAAIF,KAAKlE,OAAT,gBAA+B,CAC5DyE,OAAQ,OACRC,KAAMJ,EACND,YAAa,YAPrB,cAIUvJ,EAJV,yBASWA,GATX,gDAbJ,oHAyBI,sBAAAhE,EAAA,sEACUoN,KAAKE,MAAM,iBADrB,gDAzBJ,+GA6BI,WAAWhN,GAAX,eAAAN,EAAA,sEACsBoN,KAAKE,MAAMhN,GADjC,WACU0D,EADV,QAEaC,GAFb,sBAGcD,EAHd,gCAKWA,EAAI6J,QALf,gDA7BJ,8D,UCmFeC,OAtDf,WACE,IAAMC,EAAkBC,aAAc,gCAEhCjH,EAAQrF,mBACZ,kBACEuM,aAAe,CACbC,QAAS,CACP1H,KAAMuH,EAAkB,OAAS,QACjCtB,QAAS0B,UAGf,CAACJ,IAXU,EAcSxK,mBAA0B,MAdnC,mBAcNjD,EAdM,KAcD8N,EAdC,OAeqB7K,oBAAS,GAf9B,mBAeN8K,EAfM,KAeKC,EAfL,KAyBb,OATAvE,qBAAU,WACR,IAjCsBwE,EAiChBlG,GAjCgBkG,EAiCQvE,SAASuE,SAhC1B,IAAIC,gBAAgBD,EAASE,QAAQC,IAAI,YAI9B,UAAtBH,EAASI,SACJ,wBAGJ,kBAAkBC,KAAKL,EAASM,UAI9B,GAFEN,EAASI,SAAW,KAAOJ,EAASlG,KAAOkG,EAASO,WAuBvDzG,EACF+F,EAAO,IAAIjB,GAAS9E,IAEpBiG,GAAa,KAEd,IAECD,EAEA,eAACU,GAAA,EAAD,CAAehI,MAAOA,EAAtB,UACE,cAACiI,GAAA,EAAD,uOACA,cAACvG,EAAA,EAAD,CAAMC,KAAK,4CAAX,uBAMJ,eAACqG,GAAA,EAAD,CAAehI,MAAOA,EAAtB,UACE,cAACkI,GAAA,EAAD,IACA,cAAC,IAAD,CAAW/I,MAAO,CAChBgJ,gBA1DgB,KAyDlB,SAGG5O,GAAO,cAACyM,GAAD,CAAczM,IAAKA,MAE7B,sBAAKqG,MAAO,CACVhB,QAAS,eACTyF,SAAU,QACV+D,OAAQ,EACRC,MAAO,EACPC,SAAU,QACVC,UAAW,UANb,0BAOiB7M,WAASC,QAnET,4BAmE4B6M,eClEpCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnG,SAASoG,eAAe,SAM1BZ,M","file":"static/js/main.2d22829b.chunk.js","sourcesContent":["import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark1 = false }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark1: boolean,\n    }\n) {\n  const query = `?max_page=${maxPage}`\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>('/narou/isnoticelist' + query,\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const bookmark = 1;\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark1) ? `/narou/bookmarks/${bookmark}?order=${order}` : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? '/r18/isnoticelist' + query : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      const score = (i: IsNoticeListItem) => {\n        if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n        if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n        return i.latest - i.bookmark;\n      }\n\n      // なろう、R18のアイテムを混ぜて、未読があって少ない順にし、\n      // 未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n        .slice(0, 30);\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Theme,\n  Toolbar,\n} from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { clearCache, IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport useSWR from 'swr';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction itemSummary(item: IsNoticeListItem): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\ntype NovelInfo = {\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_no?: number;\n  bookmark_episode?: number;\n}\n\nfunction novelInfoPath(base_url?: string): string | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    // base_url is invalid\n    return null;\n  }\n  const [, host, ncode] = m;\n  switch (host) {\n    case 'ncode.syosetu.com':\n      return `/narou/novels/${ncode}`;\n    case 'novel18.syosetu.com':\n      return `/r18/novels/${ncode}`;\n    default:\n      // unknown host\n      return null;\n  }\n}\n\nfunction useNovelInfo(\n  api: NarouApi,\n  base_url?: string\n) {\n  const { data, error } = useSWR<NovelInfo>(\n    novelInfoPath(base_url),\n    async path => api.call(path),\n  );\n\n  return { data, error };\n}\n\nfunction OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi,\n  item?: IsNoticeListItem,\n  onClose: () => void,\n}) {\n  const { data } = useNovelInfo(api, item?.base_url);\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={data?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item) window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item) window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()\n        }>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark1, setBookmark1] = useState(false);\n\n  const { data: items, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark1 });\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : null, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    if (unreads !== null) {\n      document.title = `なろう 未読:${unreads}`;\n    }\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    setSelectedIndex(-1);\n  }, [enableR18, maxPage]);\n\n  useEffect(() => {\n    const index = items && items.length > 0 && unread(items[0]) > 0 ? 0 : -1;\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n          case 'Escape':\n            setSelectedIndex(defaultIndex);\n            break;\n          case 'r':\n            setEnableR18(v => !v);\n            break;\n          case 'b':\n            setBookmark1(v => !v);\n            break;\n          case '1':\n            setMaxPage(v => maxPageValue(v === maxPageValue(false)));\n            break;\n\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, defaultIndex, items]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { onClick: () => setConfirm(item) };\n    }\n  }, [setConfirm]);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...? status: ${error.status}</div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box>\n            <FormControlLabel\n              label=\"BM1\"\n              control={\n                <Switch\n                  checked={bookmark1}\n                  onChange={event => setBookmark1(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box m={2}>未読: {unreads ?? ''}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={selectedIndex === 0}\n            disableRipple={true}\n            ref={defaultRef}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <List>\n          {items?.map((item, index) =>\n            <ListItem key={item.base_url} button={true}\n              {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n              disableRipple={true}\n              onFocusVisible={() => setSelectedIndex(index)}\n              {...buttonProps(item)} >\n              <ListItemAvatar>\n                <Badge overlap=\"circle\" {...badgeProps(item)} >\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={itemSummary(item)}\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n            </ListItem>)}\n        </List>\n      </Box >\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","type Api = '/narou/login' | '/narou/logout' | '/narou/isnoticelist' | '/r18/isnoticelist';\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    async fetch(api: Api): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(api: '/narou/isnoticelist' | '/r18/isnoticelist') {\n        const res = await this.fetch(api);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n}","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        {api && <NarouUpdates api={api} />}\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}