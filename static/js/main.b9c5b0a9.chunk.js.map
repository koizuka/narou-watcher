{"version":3,"sources":["narouApi/NarouApi.ts","narouApi/useIsNoticeList.tsx","narouApi/IsNoticeListItem.tsx","NarouLoginForm.tsx","narouApi/useBookmarkInfo.ts","narouApi/useNovelInfo.tsx","OpenConfirmDialog.tsx","BookmarkSelector.tsx","useHotKeys.tsx","reducer/ItemsState.tsx","NarouUpdates.tsx","useAppBadge.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarouApi","server","this","replace","api","a","fetch","credentials","id","password","formData","FormData","append","method","body","res","key","ok","json","maxPage","no","order","ncode","clearCache","mutate","hasUnread","item","latest","bookmark","nextLink","base_url","itemSummary","fields","title","push","completed","join","unread","Math","max","NarouLoginForm","props","useState","userId","setUserId","setPassword","error","setError","postLogin","useCallback","login","text","status","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","CardContent","Box","display","flexDirection","justifyContent","TextField","name","label","value","onChange","e","target","onKeyPress","type","inputRef","CardActions","style","variant","useBookmarkInfo","r18","useSWR","bookmarksR18","bookmarks","call","data","useMemo","reduce","d","num_items","useNovelInfo","info","m","match","console","warn","host","extractInfoPath","novelInfo","novelInfoR18","path","OpenConfirmDialog","bookmarkInfo","bookmark_no","isR18","log","bookmark_url","url","Link","href","author_url","author_name","size","window","useStyles","makeStyles","root","color","icon","fill","withWidth","setBookmark","onChangeBookmark","width","classes","setOpen","large","isWidthUp","Select","disableUnderline","onOpen","event","Number","MenuItem","Object","keys","map","k","toKeyString","shiftKey","undefined","ctrlKey","altKey","metaKey","filter","s","useHotKeys","hotkeys","setHotkeys","useEffect","length","forEach","keyString","endsWith","slice","split","reverse","elems","availableModifiers","some","includes","Error","shouldBe","checkKeyString","onKeyDown","handler","document","addEventListener","removeEventListener","itemsStateReducer","state","action","items","unreads","selectedIndex","defaultIndex","sort","b","cmps","f","c","ascend","compare","i","score","update_time","head","index","min","fa","fb","MAX_SAFE_INTEGER","UserTopURL","theme","createStyles","backdrop","zIndex","drawer","badgeProps","badgeContent","maxPageValue","sw","NarouUpdateList","onUnauthorized","enableR18","setEnableR18","setMaxPage","isnoticelist","onErrorRetry","raw_items","bookmark_items","bookmark_error","isnoticelistR18","raw_items18","error18","raw_items2","Set","adds","is_notice","has","DateTime","fromISO","useIsNoticeList","rawItems","useReducer","dispatch","setSelectedIndex","confirm","setConfirm","navigator","setAppBadge","count","clearAppBadge","Promise","resolve","setClientBadge","clearClientBadge","scrollIn","node","scrollIntoView","behavior","scrollMode","defaultRef","setHotKeys","len","arrowUp","preventDefault","arrowDown","v","cur","numbers","nextBookmark","findIndex","prevBookmark","buttonProps","component","disabled","location","reload","JSON","stringify","baseUrl","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disableRipple","ref","alignItems","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","ListItemSecondaryAction","IconButton","edge","Info","right","bottom","Fab","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","App","prefersDarkMode","useMediaQuery","createTheme","palette","cyan","setApi","hostError","setHostError","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","CssBaseline","refreshInterval","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9c5b0a9.chunk.js","sourcesContent":["\n/**\n * bookmarkの並びを指定する\n * * 'updated_at' ブクマ更新順\n * * 'new' ブクマ追加順\n * * 'ncode' 新着Nコード順 \n * * 'newlist' 新着更新順\n */\ntype BookmarkOrder = 'updated_at' | 'new' | 'ncode' | 'newlist';\n\n/**\n * SWRのキーとして与え、 SWRのfetcharとして `key => NarouApi.call(key)` として渡す値。\n */\ntype NarouApiCallKey = string;\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    get baseUrl(): string { return this.server; }\n\n    async fetch(api: string): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(key: NarouApiCallKey) {\n        const res = await this.fetch(key);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n\n    static isnoticelist({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/narou/isnoticelist?max_page=${maxPage}`;\n    }\n    static isnoticelistR18({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/r18/isnoticelist?max_page=${maxPage}`;\n    }\n\n    static bookmarks(): NarouApiCallKey {\n        return `/narou/bookmarks/`;\n    }\n    static bookmarksR18(): NarouApiCallKey {\n        return `/r18/bookmarks/`;\n    }\n\n    static bookmark(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/narou/bookmarks/${no}?order=${order}`;\n    }\n    static bookmarkR18(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/r18/bookmarks/${no}?order=${order}`;\n    }\n\n    static novelInfo(ncode: string): NarouApiCallKey {\n        return `/narou/novels/${ncode}`;\n    }\n    static novelInfoR18(ncode: string): NarouApiCallKey {\n        return `/r18/novels/${ncode}`;\n    }\n}","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\nimport { IsNoticeListItem } from './IsNoticeListItem';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark = 0 }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark: number,\n    }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(NarouApi.isnoticelist({ maxPage }),\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark) ? NarouApi.bookmark(bookmark, { order }) : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? NarouApi.isnoticelistR18({ maxPage }) : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      // なろう、R18のアイテムを混ぜる\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }));\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { DateTime } from 'luxon';\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n export function hasUnread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): boolean {\n  return item.latest > item.bookmark;\n}\n\nexport function nextLink(item: Pick<IsNoticeListItem, 'latest' | 'bookmark' | 'base_url'>): string {\n  if (hasUnread(item)) {\n    return `${item.base_url}${item.bookmark + 1}/`;\n  }\n  return `${item.base_url}${item.latest}/`;\n}\n\nexport function itemSummary(item: Pick<IsNoticeListItem, 'title' | 'bookmark' | 'latest' | 'completed'>): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nexport function unread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\nimport { NarouApi } from \"./NarouApi\"\n\nexport type BookmarkInfo = {\n    [no: number]: {\n        name: string;\n        num_items: number;\n    }\n}\n\ntype BookmarkInfoRecord = {\n    no: number;\n    name: string;\n    num_items: number;\n}\n\nexport function useBookmarkInfo(api: NarouApi | null, r18: boolean) {\n    const { data, error } = useSWR<BookmarkInfoRecord[]>(\n        api ?\n            (r18 ? NarouApi.bookmarksR18() : NarouApi.bookmarks())\n            :\n            null,\n        async key => api ? api.call(key) : [],\n    )\n\n    const info: BookmarkInfo | undefined = useMemo(() => {\n        if (data) {\n            return data.reduce<BookmarkInfo>((a, d) => {\n                a[d.no] = {\n                    name: d.name,\n                    num_items: d.num_items,\n                };\n                return a;\n            }, {});\n        } else {\n            return undefined;\n        }\n    }, [data]);\n\n    return { data: info, error };\n}","import { NarouApi } from './NarouApi';\nimport useSWR from 'swr';\nimport { useMemo } from 'react';\n\ntype NovelInfo = {\n  base_url: string;\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_url?: string;\n  bookmark_no?: number;\n  bookmark_episode?: number;\n};\n\nfunction extractInfoPath(base_url?: string): { host: string, ncode: string } | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([0-9a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    console.warn(`base_url is invalid: ${base_url}`);\n    return null;\n  }\n  const [, host, ncode] = m;\n  return { host, ncode };\n}\n\nexport function useNovelInfo(\n  api: NarouApi,\n  base_url?: string) {\n\n  const info = useMemo(() => extractInfoPath(base_url), [base_url]);\n  const key = useMemo(() => {\n    if (!info) {\n      return null;\n    }\n    switch (info.host) {\n      case 'ncode.syosetu.com':\n        return NarouApi.novelInfo(info.ncode);\n      case 'novel18.syosetu.com':\n        return NarouApi.novelInfoR18(info.ncode);\n      default:\n        console.warn(`unknown host: ${info.host}`);\n        return null;\n    }\n  }, [info])\n\n  const { data, error } = useSWR<NovelInfo>(key, async path => api.call(path));\n\n  return { data, error };\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Link\n} from '@material-ui/core';\nimport { useMemo } from 'react';\nimport { IsNoticeListItem, nextLink } from './narouApi/IsNoticeListItem';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { useNovelInfo } from './narouApi/useNovelInfo';\n\nexport function OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi;\n  item?: IsNoticeListItem;\n  onClose: () => void;\n}) {\n  const { data: novelInfo } = useNovelInfo(api, item?.base_url);\n  const { data: bookmarkInfo } = useBookmarkInfo(novelInfo?.bookmark_no ? api : null, item?.isR18 || false);\n\n  const bookmark = useMemo(() => {\n    console.log('novelInfo:', novelInfo);\n    console.log('bookmarkInfo:', bookmarkInfo);\n    const bookmark_no = novelInfo?.bookmark_no\n    if (bookmarkInfo && bookmark_no && novelInfo?.bookmark_url) {\n      return {\n        no: bookmark_no,\n        name: bookmarkInfo[bookmark_no].name,\n        url: novelInfo.bookmark_url,\n      };\n    }\n    return undefined;\n  }, [novelInfo, bookmarkInfo])\n\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={novelInfo?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      {bookmark && <DialogContent>ブックマーク:<Link href={bookmark.url} target=\"_blank\">{bookmark.name}</Link></DialogContent>}\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\nimport {\n  isWidthUp, makeStyles, MenuItem,\n  Select,\n  withWidth\n} from '@material-ui/core';\nimport { BookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\n\n// prevent text/icon color to white when darkMode (since this Select is on the AppBar)\nconst useStyles = makeStyles({\n  root: {\n    color: 'black',\n  },\n  icon: {\n    fill: 'black',\n  },\n});\n\nfunction BookmarkSelector({ bookmarks, bookmark, onChangeBookmark: setBookmark, width }: {\n  bookmarks: BookmarkInfo | undefined;\n  bookmark: number;\n  onChangeBookmark: (newBookmark: number) => void;\n  width: Breakpoint;\n}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const large = isWidthUp('sm', width);\n\n  return (\n    <Select\n      classes={{ root: classes.root, icon: classes.icon }}\n      disableUnderline={true}\n      open={open} onOpen={() => setOpen(true)} onClose={() => setOpen(false)}\n      value={bookmark} onChange={event => setBookmark(Number(event.target.value))}>\n      <MenuItem key={0} value={0}>{open || large ? 'ブックマークなし' : 'BM-'}</MenuItem>\n      {bookmarks && Object.keys(bookmarks).map(k => <MenuItem key={k} value={k}>{open || large ? bookmarks[Number(k)].name : `BM${bookmark}`}</MenuItem>)}\n    </Select>\n  );\n}\n\nexport default withWidth()(BookmarkSelector);","import { useEffect, useState } from 'react';\n\nexport type HotKeys = {\n  [key: string]: (event: KeyboardEvent) => void;\n}\n\nfunction toKeyString(event: { key: string; shiftKey: boolean; ctrlKey: boolean; altKey: boolean; metaKey: boolean }): string {\n  return [\n    event.shiftKey ? 'shift' : undefined,\n    event.ctrlKey ? 'ctrl' : undefined,\n    event.altKey ? 'alt' : undefined,\n    event.metaKey ? 'meta' : undefined,\n    event.key,\n  ].filter(s => s !== undefined).join('+')\n}\n\nexport function checkKeyString(keyString: string) {\n  const [key, ...elems] =\n    keyString === '+'\n      ? ['+']\n      : keyString.endsWith('++')\n        ? ['+', ...keyString.slice(0, -2).split('+').reverse()]\n        : keyString.split('+').reverse();\n\n  const availableModifiers = ['shift', 'ctrl', 'alt', 'meta'];\n  if (elems.some(s => !availableModifiers.includes(s))) {\n    throw new Error(`HotKey(${keyString}): unknown modifiers: ${elems.filter(s => !availableModifiers.includes(s))}`);\n  }\n\n  const shouldBe = toKeyString({\n    key,\n    shiftKey: elems.some(s => s === 'shift'),\n    ctrlKey: elems.some(s => s === 'ctrl'),\n    altKey: elems.some(s => s === 'alt'),\n    metaKey: elems.some(s => s === 'meta'),\n  });\n\n  if (shouldBe !== keyString) {\n    throw new Error(`HotKey(${keyString}): invalid order: must be ${shouldBe} `);\n  }\n}\n\nexport function useHotKeys() {\n  const [hotkeys, setHotkeys] = useState<HotKeys>({});\n\n  useEffect(() => {\n    const keys = Object.keys(hotkeys);\n    if (keys.length > 0) {\n      keys.forEach(key => checkKeyString(key));\n\n      const onKeyDown = (event: KeyboardEvent) => {\n        const handler = hotkeys[toKeyString(event)];\n        if (handler) {\n          handler(event);\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [hotkeys]);\n\n  return [setHotkeys];\n}\n","import { IsNoticeListItem } from \"../narouApi/IsNoticeListItem\";\n\nexport type ItemsState = {\n  items?: IsNoticeListItem[];\n  unreads: number | null;\n  selectedIndex: number;\n  defaultIndex: number;\n};\n\nexport type StateAction =\n  | { type: 'set', items: IsNoticeListItem[] | undefined }\n  | { type: 'select', index: number }\n\nexport function itemsStateReducer(state: ItemsState, action: StateAction) {\n  switch (action.type) {\n    case 'set':\n      {\n        if (!action.items) {\n          return {\n            unreads: null,\n            selectedIndex: -1,\n            defaultIndex: -1,\n          };\n        }\n\n        // 未読があって少ない順にし、未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n        const items = action.items.sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n          .slice(0, 30);\n\n        const head = items[0];\n        const index = head && head.bookmark < head.latest ? 0 : -1;\n        return {\n          ...state,\n          items,\n          unreads: items.filter(i => i.bookmark < i.latest).length,\n          selectedIndex: index,\n          defaultIndex: index,\n        };\n      }\n\n    case 'select':\n      return {\n        ...state,\n        selectedIndex: state.items ? Math.max(Math.min(action.index, state.items.length - 1), -1) : -1,\n      }\n  }\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nconst score = (i: IsNoticeListItem) => {\n  if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n  if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n  return i.latest - i.bookmark;\n}\n","import { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Theme,\n  Toolbar,\n} from '@material-ui/core';\nimport { Book, Info } from '@material-ui/icons';\nimport { clearCache, useIsNoticeList } from './narouApi/useIsNoticeList';\nimport { IsNoticeListItem, itemSummary, nextLink, unread } from \"./narouApi/IsNoticeListItem\";\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './narouApi/NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { OpenConfirmDialog } from './OpenConfirmDialog';\nimport { BookmarkInfo, useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport BookmarkSelector from './BookmarkSelector';\nimport { useAppBadge, useClientBadge } from './useAppBadge';\nimport { useHotKeys } from './useHotKeys';\nimport { itemsStateReducer } from './reducer/ItemsState';\n\nconst UserTopURL = 'https://syosetu.com/user/top/';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nexport function nextBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = Object.keys(bookmarks).map(k => Number(k));\n  for (const i of numbers) {\n    if (i > cur) {\n      return i;\n    }\n  }\n  return 0;\n}\n\nexport function prevBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = [0, ...Object.keys(bookmarks).map(k => Number(k))];\n  const i = numbers.findIndex(i => i >= cur);\n  if (i > 0) {\n    return numbers[i - 1];\n  }\n  return numbers[numbers.length - 1];\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark, setBookmark] = useState(0);\n\n  const { data: rawItems, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark });\n  const { data: bookmarks } = useBookmarkInfo(server, false);\n\n  const [{ items, unreads, selectedIndex, defaultIndex }, dispatch] = useReducer(itemsStateReducer, { unreads: null, selectedIndex: -1, defaultIndex: -1 })\n\n  useEffect(() => {\n    dispatch({ type: 'set', items: rawItems })\n  }, [rawItems]);\n  const setSelectedIndex = (index: number) => dispatch({ type: 'select', index });\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const { setAppBadge, clearAppBadge } = useAppBadge();\n  const { setClientBadge, clearClientBadge } = useClientBadge();\n\n  useEffect(() => {\n    if (unreads !== null) {\n      document.title = `なろう 未読:${unreads}`;\n      if (unreads) {\n        setAppBadge(unreads);\n        setClientBadge(unreads);\n      } else {\n        clearAppBadge();\n        clearClientBadge();\n      }\n    }\n  }, [clearAppBadge, clearClientBadge, setAppBadge, setClientBadge, unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  const [setHotKeys] = useHotKeys();\n\n  useEffect(() => {\n    if (items) {\n      const len = items.length;\n      const arrowUp = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex - 1 });\n      }\n      const arrowDown = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex + 1 });\n      }\n\n      setHotKeys({\n        ...(selectedIndex > 0 && {\n          'ArrowUp': arrowUp,\n          'k': arrowUp,\n        }),\n        ...(selectedIndex < len - 1 && {\n          'ArrowDown': arrowDown,\n          'j': arrowDown,\n        }),\n        ...(len > 0 && {\n          'Home': () => setSelectedIndex(0),\n          'End': () => setSelectedIndex(len - 1),\n          'Escape': () => setSelectedIndex(defaultIndex),\n        }),\n        'r': () => setEnableR18(v => !v),\n        '1': () => setMaxPage(v => maxPageValue(v === maxPageValue(false))),\n        'h': () => window.open(UserTopURL, '_blank'),\n        ...(bookmarks && {\n          'b': () => setBookmark(nextBookmark(bookmarks, bookmark)),\n          'shift+B': () => setBookmark(prevBookmark(bookmarks, bookmark)),\n        })\n      });\n    }\n  }, [selectedIndex, defaultIndex, items, bookmarks, bookmark, setHotKeys]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { disabled: true };\n    }\n  }, []);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div onClick={() => window.location.reload()}>Server({JSON.stringify(server.baseUrl)}) is not working...? status: {error.status}</div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box>\n            <BookmarkSelector bookmarks={bookmarks} bookmark={bookmark} onChangeBookmark={setBookmark} />\n          </Box>\n          <Box m={2}>未読: {unreads ?? ''}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={selectedIndex === 0}\n            disableRipple={true}\n            ref={defaultRef}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" alignItems=\"center\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <Box maxWidth={600}>\n          <List>\n            {items?.map((item, index) =>\n              <ListItem key={item.base_url} button={true}\n                {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n                disableRipple={true}\n                onFocusVisible={() => setSelectedIndex(index)}\n                {...buttonProps(item)} >\n                <ListItemAvatar>\n                  <Badge overlap=\"circular\" {...badgeProps(item)} >\n                    <Avatar>\n                      <Book color={item.isR18 ? \"secondary\" : undefined} />\n                    </Avatar>\n                  </Badge>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={itemSummary(item)}\n                  secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" onClick={() => setConfirm(item)} disableRipple={true}>\n                    <Info />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>)}\n          </List>\n        </Box>\n        <Box position=\"fixed\" right=\"20px\" bottom=\"20px\">\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            disableRipple={true}\n            component=\"a\"\n            href={UserTopURL}\n            target=\"_blank\"\n          >ユーザーホーム</Fab>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","export function useAppBadge(): { setAppBadge: (count?: number) => Promise<void>; clearAppBadge: () => Promise<void>; } {\n  if ('setAppBadge' in navigator && 'clearAppBadge' in navigator) {\n    return {\n      setAppBadge: (count) => (navigator as any).setAppBadge(count),\n      clearAppBadge: () => (navigator as any).clearAppBadge(),\n    };\n  } else {\n    return {\n      setAppBadge: () => Promise.resolve(),\n      clearAppBadge: () => Promise.resolve(),\n    };\n  }\n}\n\nexport function useClientBadge(): { setClientBadge: (count?: number) => Promise<void>; clearClientBadge: () => Promise<void>; } {\n  if ('setClientBadge' in navigator && 'clearClientBadge' in navigator) {\n    return {\n      setClientBadge: (count) => (navigator as any).setClientBadge(count),\n      clearClientBadge: () => (navigator as any).clearClientBadge(),\n    };\n  } else {\n    return {\n      setClientBadge: () => Promise.resolve(),\n      clearClientBadge: () => Promise.resolve(),\n    };\n  }\n}\n\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        {api && <NarouUpdates api={api} />}\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}