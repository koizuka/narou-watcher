{"version":3,"sources":["NarouApi.ts","useIsNoticeList.tsx","IsNoticeListItem.tsx","NarouLoginForm.tsx","useNovelInfo.tsx","OpenConfirmDialog.tsx","NarouUpdates.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarouApi","server","this","replace","api","a","fetch","credentials","id","password","formData","FormData","append","method","body","res","key","ok","json","maxPage","no","order","ncode","clearCache","mutate","ascend","b","f","fa","fb","useIsNoticeList","enableR18","bookmark1","useSWR","isnoticelist","path","call","onErrorRetry","error","console","log","status","raw_items","data","bookmark","bookmark_items","bookmark_error","isnoticelistR18","raw_items18","error18","raw_items2","useMemo","keys","Set","map","i","base_url","adds","filter","is_notice","has","length","items","undefined","isR18","update_time","DateTime","fromISO","sort","cmps","c","compare","latest","Number","MAX_SAFE_INTEGER","score","slice","hasUnread","item","nextLink","itemSummary","fields","title","push","completed","join","unread","Math","max","NarouLoginForm","props","useState","userId","setUserId","setPassword","setError","postLogin","useCallback","login","text","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","CardContent","Box","display","flexDirection","justifyContent","TextField","name","label","value","onChange","e","target","onKeyPress","type","inputRef","CardActions","style","variant","useNovelInfo","m","match","host","novelInfo","novelInfoR18","novelInfoPath","OpenConfirmDialog","Link","href","author_url","author_name","size","window","useStyles","makeStyles","theme","createStyles","backdrop","zIndex","drawer","color","badgeProps","badgeContent","maxPageValue","sw","NarouUpdateList","onUnauthorized","classes","setEnableR18","setMaxPage","setBookmark1","unreads","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoView","behavior","scrollMode","index","defaultRef","onKeyDown","event","len","preventDefault","v","addEventListener","removeEventListener","buttonProps","component","JSON","stringify","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disabled","disableRipple","ref","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","App","prefersDarkMode","useMediaQuery","createMuiTheme","palette","cyan","setApi","hostError","setHostError","location","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","CssBaseline","refreshInterval","bottom","right","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gZAeaA,EAAb,WAGI,WAAYC,GAAiB,yBAFrBA,YAEoB,EACxBC,KAAKD,OAASA,EAAOE,QAAQ,MAAO,IAJ5C,8LAOI,WAAYC,GAAZ,SAAAC,EAAA,+EACWC,MAAM,GAAD,OAAIJ,KAAKD,QAAT,OAAkBG,GAAO,CACjCG,YAAa,aAFrB,gDAPJ,kHAaI,WAAYC,EAAYC,GAAxB,iBAAAJ,EAAA,6DACUK,EAAW,IAAIC,UACZC,OAAO,KAAMJ,GACtBE,EAASE,OAAO,WAAYH,GAHhC,SAIgCH,MAAM,GAAD,OAAIJ,KAAKD,OAAT,gBAA+B,CAC5DY,OAAQ,OACRC,KAAMJ,EACNH,YAAa,YAPrB,cAIUQ,EAJV,yBASWA,GATX,gDAbJ,oHAyBI,sBAAAV,EAAA,sEACUH,KAAKI,MAAM,iBADrB,gDAzBJ,+GA6BI,WAAWU,GAAX,eAAAX,EAAA,sEACsBH,KAAKI,MAAMU,GADjC,WACUD,EADV,QAEaE,GAFb,sBAGcF,EAHd,gCAKWA,EAAIG,QALf,gDA7BJ,mFAqCI,YAA4E,IAAD,IAArDC,QAClB,MAAM,gCAAN,YADuE,MAA3C,EAA2C,KArC/E,6BAwCI,YAA+E,IAAD,IAArDA,QACrB,MAAM,8BAAN,YAD0E,MAA3C,EAA2C,KAxClF,uBA4CI,WACI,MAAM,qBA7Cd,0BA+CI,WACI,MAAM,mBAhDd,sBAmDI,SAAgBC,EAAhB,GAAmF,IAArDC,EAAoD,EAApDA,MAC1B,MAAM,oBAAN,OAA2BD,EAA3B,kBAAuCC,KApD/C,yBAsDI,SAAmBD,EAAnB,GAAsF,IAArDC,EAAoD,EAApDA,MAC7B,MAAM,kBAAN,OAAyBD,EAAzB,kBAAqCC,KAvD7C,uBA0DI,SAAiBC,GACb,MAAM,iBAAN,OAAwBA,KA3DhC,0BA6DI,SAAoBA,GAChB,MAAM,eAAN,OAAsBA,OA9D9B,KCGO,SAASC,IACdC,YAAO,uBACPA,YAAO,qBAIT,SAASC,EAAUpB,EAAMqB,EAAMC,GAC7B,IAAMC,EAAKD,EAAEtB,GAAIwB,EAAKF,EAAED,GACxB,OAAIE,EAAKC,GAAY,EACjBD,EAAKC,EAAW,EACb,EAuBF,SAASC,EACd1B,EADK,GAQJ,IANC2B,EAMF,EANEA,UAMF,IANaZ,eAMb,MANuB,EAMvB,MAN0Ba,iBAM1B,WACmCC,YAA6BjC,EAASkC,aAAa,CAAEf,YAA/C,uCACvC,WAAMgB,GAAN,SAAA9B,EAAA,+EAAcD,EAAIgC,KAAKD,IAAvB,2CADuC,sDAEvC,CACEE,aAAc,SAACC,GACbC,QAAQC,IAAI,gBAAiBF,EAAOA,EAAMG,WAJlCC,EADd,EACQC,KAAiBL,EADzB,EACyBA,MADzB,EAYwDL,aAA+BK,GAASN,EAAahC,EAAS4C,SAFrG,EAEwH,CAAEvB,MADvG,QACkH,KAAxF,uCAC5D,WAAMc,GAAN,SAAA9B,EAAA,+EAAcD,EAAIgC,KAAKD,IAAvB,2CAD4D,uDAAhDU,EAZd,EAYQF,KAA6BG,EAZrC,EAY8BR,MAZ9B,EAgB8CL,aAA+BK,GAASP,EAAa/B,EAAS+C,gBAAgB,CAAE5B,YAAa,KAAvF,uCAClD,WAAMgB,GAAN,SAAA9B,EAAA,+EAAcD,EAAIgC,KAAKD,IAAvB,2CADkD,uDAAtCa,EAhBd,EAgBQL,KAA0BM,EAhBlC,EAgB2BX,MAKrBY,EAAaC,mBAAQ,WACzB,GAAIT,GACEG,EAAgB,CAClB,IAAMO,EAAO,IAAIC,IAAIX,EAAUY,KAAI,SAAAC,GAAC,OAAIA,EAAEC,aACpCC,EAAOZ,EAAea,QAAO,SAAAH,GAAC,OAAIA,EAAEI,YAAcP,EAAKQ,IAAIL,EAAEC,aACnE,GAAIC,EAAKI,OAAS,EAChB,MAAM,GAAN,mBAAWnB,GAAX,YAAyBe,IAI/B,OAAOf,IACN,CAACA,EAAWG,IAETiB,EAAwCX,mBAC5C,WACE,QAAmBY,IAAfb,EAAJ,CAyBA,MAbU,sBACLA,EAAWI,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaS,OAAO,QAD/B,aAEJhB,GAAe,IAAIM,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaS,OAAO,SAChDV,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaU,YAAaC,WAASC,QAAQZ,EAAEU,kBACjDG,MAAK,SAAC/D,EAAGqB,GACR,OA1EV,SAAoBrB,EAAMqB,GAA8D,IAAD,uBAApD2C,EAAoD,iCAApDA,EAAoD,kBACrF,cAAgBA,EAAhB,eAAsB,CAAjB,IAAM1C,EAAC,KACN2C,OAAC,EAML,GAJEA,EADe,kBAAN3C,EACLF,EAAOC,EAAGrB,EAAIsB,EAAiBA,GAE/BF,EAAOpB,EAAGqB,EAAGC,GAEZ,OAAO2C,EAEhB,OAAO,EAgEQC,CAAQlE,EAAGqB,GAChB,SAAA6B,GAAC,OAdO,SAACA,GACb,OAAIA,EAAEX,WAAaW,EAAEiB,OAAeC,OAAOC,iBACvCnB,EAAEX,SAAWW,EAAEiB,OAAeC,OAAOC,iBAAmB,EACrDnB,EAAEiB,OAASjB,EAAEX,SAWX+B,CAAMpB,KACXlD,EAAEuC,SAAWvC,EAAEmE,OACb,SAAAjB,GAAC,OAAIA,EAAEU,aAhFZ,CAAEtC,EAiFW,SAAA4B,GAAC,OAAIA,EAAEU,eACjB,SAAAV,GAAC,OAAIA,EAAEC,eAEVoB,MAAM,EAAG,OAGd,CAAC1B,EAAYF,IAGf,MAAO,CAAEL,KAAML,OAAQyB,EAAYD,EAAOxB,MAAOA,GAASW,GAAWH,GChHhE,SAAS+B,EAAUC,GACxB,OAAOA,EAAKN,OAASM,EAAKlC,SAGrB,SAASmC,EAASD,GACvB,OAAID,EAAUC,GACN,GAAN,OAAUA,EAAKtB,UAAf,OAA0BsB,EAAKlC,SAAW,EAA1C,KAEI,GAAN,OAAUkC,EAAKtB,UAAf,OAA0BsB,EAAKN,OAA/B,KAGK,SAASQ,EAAYF,GAC1B,IAAMG,EAAS,CAACH,EAAKI,MAAO,MAQ5B,OAPIL,EAAUC,IACZG,EAAOE,KAAP,UAAeL,EAAKlC,SAApB,MAEFqC,EAAOE,KAAP,UAAeL,EAAKN,OAApB,MACIM,EAAKM,WACPH,EAAOE,KAAK,kBAEPF,EAAOI,KAAK,IAGd,SAASC,EAAOR,GACrB,OAAOS,KAAKC,IAAIV,EAAKN,OAASM,EAAKlC,SAAU,G,qGCjCxC,SAAS6C,EAAeC,GAAiD,IAAD,EACjDC,mBAAS,IADwC,mBACtEC,EADsE,KAC9DC,EAD8D,OAE7CF,mBAAS,IAFoC,mBAEtElF,EAFsE,KAE5DqF,EAF4D,OAGnDH,mBAAiB,IAHkC,mBAGtErD,EAHsE,KAG/DyD,EAH+D,KAKvEC,EAAYC,sBAAW,sBAAC,8BAAA5F,EAAA,sEACAqF,EAAMtF,IAAI8F,MAAMN,EAAQnF,GADxB,WACtBM,EADsB,QAEnBE,GAFmB,iCAGPF,EAAIoF,OAHG,OAGpBA,EAHoB,OAI1BJ,EAAS,GAAD,OAAIhF,EAAI0B,OAAR,YAAkB1B,EAAIqF,WAAtB,aAAqCD,IAJnB,wBAM1BT,EAAMW,UANoB,4CAQ3B,CAACT,EAAQnF,EAAUiF,IAEhBY,EAAcC,mBAEdC,EAAaP,uBAAY,WAAO,IAAD,EACnCF,EAAS,IACT,UAAAO,EAAYG,eAAZ,SAAqBC,UACpB,IAEH,OAAQ,qCACN,eAACC,EAAA,EAAD,CAAQC,KAAgB,KAAVtE,EAAcuE,QAAS,kBAAML,KAA3C,UACE,cAACM,EAAA,EAAD,uFACA,cAACC,EAAA,EAAD,UACE,8BAAMzE,MAER,cAAC0E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,WAAS,EAACC,QAAS,kBAAMX,KAAjC,qBAGJ,cAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,QAAQ,EAAd,UACE,cAACC,EAAA,EAAD,CAAYtC,MAAM,yFAElB,cAACuC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,eAAe,SAA1D,UACE,cAACC,EAAA,EAAD,CAAWtH,GAAG,KAAKuH,KAAK,KAAKC,MAAM,cAAcd,WAAS,EACxDe,MAAOrC,EAAQsC,SAAU,SAAAC,GAAC,OAAItC,EAAUsC,EAAEC,OAAOH,QACjDI,WAAY,SAAAF,GACc,IAAD,EAAT,UAAVA,EAAEnH,MACJ,UAAAsF,EAAYG,eAAZ,SAAqBC,YAG3B,cAACoB,EAAA,EAAD,CAAWtH,GAAG,WAAWuH,KAAK,WAAWC,MAAM,WAAWM,KAAK,WAC7DL,MAAOxH,EAAUyH,SAAU,SAAAC,GAAC,OAAIrC,EAAYqC,EAAEC,OAAOH,QACrDM,SAAUjC,EAAa+B,WAAY,SAAAF,GACnB,UAAVA,EAAEnH,KACJgF,YAKV,cAACwC,EAAA,EAAD,CAAaC,MAAO,CAAEZ,eAAgB,UAAtC,SACE,cAACZ,EAAA,EAAD,CAAQyB,QAAQ,YAAYvB,QAASnB,EAArC,6B,uBCxBH,SAAS2C,GACdvI,EACAoD,GAAoB,IAAD,EACKvB,YAzB1B,SAAuBuB,GACrB,IAAKA,EACH,OAAO,KAGT,IAAMoF,EAAIpF,EAASqF,MAAM,0CACzB,IAAKD,EAEH,OAAO,KAR8C,kBAU/BA,EAV+B,GAU9CE,EAV8C,KAUxCxH,EAVwC,KAWvD,OAAQwH,GACN,IAAK,oBACH,OAAO9I,EAAS+I,UAAUzH,GAC5B,IAAK,sBACH,OAAOtB,EAASgJ,aAAa1H,GAC/B,QAEE,OAAO,MAQT2H,CAAczF,GADc,uCAE5B,WAAOrB,GAAP,SAAA9B,EAAA,+EAAgBD,EAAIgC,KAAKD,IAAzB,2CAF4B,uDAK9B,MAAO,CAAEQ,KANU,EACXA,KAKOL,MANI,EACLA,OC1BT,SAAS4G,GAAT,GAIH,IAJgC9I,EAIjC,EAJiCA,IAAK0E,EAItC,EAJsCA,KAAM+B,EAI5C,EAJ4CA,QAKrClE,EAASgG,GAAavI,EAAD,OAAM0E,QAAN,IAAMA,OAAN,EAAMA,EAAMtB,UAAjCb,KACR,OACE,eAACgE,EAAA,EAAD,CAAQC,OAAQ9B,EAAM+B,QAASA,EAA/B,UACE,cAACC,EAAA,EAAD,iBAAchC,QAAd,IAAcA,OAAd,EAAcA,EAAMI,QACpB,eAAC6B,EAAA,EAAD,2BAAkB,cAACoC,GAAA,EAAD,CAAMC,KAAI,OAAEzG,QAAF,IAAEA,OAAF,EAAEA,EAAM0G,WAAYjB,OAAO,SAArC,gBAA+CtD,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAMwE,iBACvE,eAACtC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQsC,KAAK,QAAQb,QAAQ,YAAYvB,QAAS,WAC5CrC,GACF0E,OAAO5C,KAAK9B,EAAKtB,SAAU,UAC7BqD,KAHF,4CAKA,eAACI,EAAA,EAAD,CAAQsC,KAAK,QAAQb,QAAQ,YAAYvB,QAAS,WAC5CrC,GACF0E,OAAO5C,KAAK7B,EAASD,GAAO,UAC9B+B,KAHF,gCAIM/B,QAJN,IAIMA,OAJN,EAIMA,EAAMN,OAJZ,kBAKA,cAACyC,EAAA,EAAD,CAAQsC,KAAK,QAAQb,QAAQ,YAAYvB,QAAS,kBAAMN,KAAxD,kDCJR,IAAM4C,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,SAAU,CACRC,OAAQH,EAAMG,OAAOC,OAAS,EAC9BC,MAAO,aAKb,SAASC,GAAWnF,GAClB,OAAIA,EAAKN,OAASM,EAAKlC,SACd,CAAEoH,MAAO,YAAaE,aAAc,KAEtC,CAAEF,MAAO,UAAWE,aAAc5E,EAAOR,IAGlD,SAASqF,GAAaC,GACpB,OAAOA,EAAK,EAAI,EAGlB,SAASC,GAAT,GAAwG,IAA7EpK,EAA4E,EAA5EA,OAAQqK,EAAoE,EAApEA,eAC3BC,EAAUd,KADqF,EAGnE9D,oBAAS,GAH0D,mBAG9F5D,EAH8F,KAGnFyI,EAHmF,OAIvE7E,mBAASwE,IAAa,IAJiD,mBAI9FhJ,EAJ8F,KAIrFsJ,EAJqF,OAKnE9E,oBAAS,GAL0D,mBAK9F3D,EAL8F,KAKnF0I,EALmF,OAOtE5I,EAAgB7B,EAAQ,CAAE8B,YAAWZ,UAASa,cAA/D8B,EAPuF,EAO7FnB,KAAaL,EAPgF,EAOhFA,MAEfqI,EAAUxH,mBAAQ,kBAAMW,EAAQA,EAAMJ,QAAO,SAAAH,GAAC,OAAIA,EAAEX,SAAWW,EAAEiB,UAAQX,OAAS,OAAM,CAACC,IATM,EAWvE6B,wBAAuC5B,GAXgC,mBAW9F6G,EAX8F,KAWrFC,EAXqF,OAa3DlF,oBAAU,GAbiD,mBAa9FmF,EAb8F,KAa/EC,EAb+E,OAc7DpF,oBAAU,GAdmD,mBAc9FqF,EAd8F,KAchFC,GAdgF,KAgBrGC,qBAAU,WACQ,OAAZP,IACFQ,SAASjG,MAAT,0CAA2ByF,MAE5B,CAACA,IAEJ,IAAMS,GAAWnF,uBAAY,SAAAoF,GACvBA,IACFC,aAAeD,EAAM,CAAEE,SAAU,SAAUC,WAAY,cACvDH,EAAK3E,WAEN,IAEHwE,qBAAU,WACRH,GAAkB,KACjB,CAAChJ,EAAWZ,IAEf+J,qBAAU,WACR,IAAMO,EAAQ3H,GAASA,EAAMD,OAAS,GAAKyB,EAAOxB,EAAM,IAAM,EAAI,GAAK,EAEvEmH,GAAgBQ,GAChBV,EAAiBU,KAChB,CAAC3H,IAEJ,IAAM4H,GAAanF,iBAA0B,MAE7C2E,qBAAU,WACmB,IAAD,GAAH,IAAnBJ,IACF,UAAAY,GAAWjF,eAAX,SAAoBC,WAErB,CAACoE,IAEJI,qBAAU,WACR,GAAIpH,EAAO,CACT,IAAM6H,EAAY,SAACC,GACjB,IAAMC,EAAM/H,EAAMD,OAClB,OAAQ+H,EAAM5K,KACZ,IAAK,UACC8J,EAAgB,GAClBc,EAAME,iBAERf,GAAiB,SAAAxH,GAAC,OAAIA,EAAI,EAAIA,EAAI,EAAI,KACtC,MACF,IAAK,YACCuH,EAAgBe,EAAM,GACxBD,EAAME,iBAERf,GAAiB,SAAAxH,GAAC,OAAIA,EAAIsI,EAAMtI,EAAI,EAAIsI,EAAM,KAC9C,MACF,IAAK,OACHd,EAAiB,GACjB,MACF,IAAK,MACHA,EAAiBc,EAAM,GACvB,MACF,IAAK,SACHd,EAAiBC,GACjB,MACF,IAAK,IACHR,GAAa,SAAAuB,GAAC,OAAKA,KACnB,MACF,IAAK,IACHrB,GAAa,SAAAqB,GAAC,OAAKA,KACnB,MACF,IAAK,IACHtB,GAAW,SAAAsB,GAAC,OAAI5B,GAAa4B,IAAM5B,IAAa,SAMtD,OADAgB,SAASa,iBAAiB,UAAWL,GAAW,GACzC,WACLR,SAASc,oBAAoB,UAAWN,OAG3C,CAACb,EAAeE,EAAclH,IAEjC,IAAMoI,GAAcjG,uBAAY,SAACnB,GAC/B,OAAIQ,EAAOR,GAAQ,EACV,CACLqH,UAAW,IACX/C,KAAMrE,EAASD,GACfqC,QAAS,kBAAM4D,GAAkB,IACjC3C,OAAQ,UAGH,CAAEjB,QAAS,kBAAM0D,EAAW/F,OAEpC,CAAC+F,IAEJ,OAAIvI,GACFC,QAAQC,IAAI,UAAWF,GACF,MAAjBA,EAAMG,QACR6H,IAEK,0CAAa8B,KAAKC,UAAUpM,GAA5B,iCAAmEqC,EAAMG,WAE7EqB,EAOH,qCACE,cAACoF,GAAD,CAAmB9I,IAAKH,EAAQ6E,KAAM8F,EAAS/D,QAAS,kBAAMgE,OAAW9G,MACzE,cAACuI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC9E,EAAA,EAAD,UACE,cAAC+E,EAAA,EAAD,CACEzE,MAAM,MACN0E,QACE,cAACC,EAAA,EAAD,CACEC,QAAS7K,EACTmG,SAAU,SAAA0D,GAAK,OAAIpB,EAAaoB,EAAMxD,OAAOwE,gBAIrD,cAAClF,EAAA,EAAD,UACE,cAAC+E,EAAA,EAAD,CACEzE,MAAM,MACN0E,QACE,cAACC,EAAA,EAAD,CACEC,QAAS5K,EACTkG,SAAU,SAAA0D,GAAK,OAAIlB,EAAakB,EAAMxD,OAAOwE,gBAIrD,eAAClF,EAAA,EAAD,CAAKkB,EAAG,EAAR,kCAAgB+B,QAAhB,IAAgBA,IAAW,MAC3B,cAAC1D,EAAA,EAAD,CACEyB,QAAQ,YACRmE,SAA4B,IAAlB/B,EACVgC,eAAe,EACfC,IAAKrB,GACLvE,QAAS,kBAAM4D,EAAiBC,IALlC,sBAQJ,cAACtD,EAAA,EAAD,CAAKkB,EAAG,EAAGjB,QAAQ,OAAOC,cAAc,SAASoF,QAAQ,mBAAzD,SACE,cAACC,EAAA,EAAD,iBACGnJ,QADH,IACGA,OADH,EACGA,EAAOR,KAAI,SAACwB,EAAM2G,GAAP,OACV,eAACyB,EAAA,EAAD,qCAA8BC,QAAQ,GAC/B1B,IAAUX,EAAgB,CAAEsC,UAAU,EAAML,IAAK3B,IAAa,IADrE,IAEE0B,eAAe,EACfO,eAAgB,kBAAMtC,EAAiBU,KACnCS,GAAYpH,IAJlB,cAKE,cAACwI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,yBAAOC,QAAQ,UAAavD,GAAWnF,IAAvC,aACE,cAAC2I,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAM1D,MAAOlF,EAAKd,MAAQ,iBAAcD,WAI9C,cAAC4J,EAAA,EAAD,CACEC,QAAS5I,EAAYF,GACrB+I,UAAS,UAAK/I,EAAKb,YAAY6J,SAAS,oBAA/B,uCAA6DhJ,EAAKwE,kBAdhExE,EAAKtB,oBA1CrB,cAACuK,EAAA,EAAD,CAAUC,UAAWzD,EAAQV,SAAUjD,MAAM,EAA7C,SACL,cAACqH,EAAA,EAAD,CAAkBjE,MAAM,cA+DvB,SAASkE,GAAT,GAAmD,IAA3B9N,EAA0B,EAA1BA,IAA0B,EACrBuF,oBAAS,GADY,mBAChDwI,EADgD,KACrCC,EADqC,KAGvD,OAAID,EACK,cAAC1I,EAAD,CAAgBrF,IAAKA,EAAKiG,QAAS,WACxC9D,QAAQC,IAAI,cACZjB,IACA6M,GAAa,MAKf,qCACE,cAAC/D,GAAD,CAAiBpK,OAAQG,EACvBkK,eAAgB,WACd/I,IACA6M,GAAa,MAEjB,cAACnH,EAAA,EAAD,CAAQE,QAAO,sBAAE,sBAAA9G,EAAA,sEACTD,EAAIiO,SADK,OAEf9M,IACA6M,GAAa,GAHE,2CAAjB,uB,8DChKSE,OAtDf,WACE,IAAMC,EAAkBC,aAAc,gCAEhC7E,EAAQxG,mBACZ,kBACEsL,aAAe,CACbC,QAAS,CACPpG,KAAMiG,EAAkB,OAAS,QACjCX,QAASe,UAGf,CAACJ,IAXU,EAcS5I,mBAA0B,MAdnC,mBAcNvF,EAdM,KAcDwO,EAdC,OAeqBjJ,oBAAS,GAf9B,mBAeNkJ,EAfM,KAeKC,EAfL,KAyBb,OATA5D,qBAAU,WACR,IAjCsB6D,EAiChBjG,GAjCgBiG,EAiCQ5D,SAAS4D,SAhC1B,IAAIC,gBAAgBD,EAASE,QAAQC,IAAI,YAI9B,UAAtBH,EAASI,SACJ,wBAGJ,kBAAkBC,KAAKL,EAASM,UAI9B,GAFEN,EAASI,SAAW,KAAOJ,EAASjG,KAAOiG,EAASO,WAuBvDxG,EACF8F,EAAO,IAAI5O,EAAS8I,IAEpBgG,GAAa,KAEd,IAECD,EAEA,eAACU,GAAA,EAAD,CAAe5F,MAAOA,EAAtB,UACE,cAAC6F,GAAA,EAAD,uOACA,cAACrG,GAAA,EAAD,CAAMC,KAAK,4CAAX,uBAMJ,eAACmG,GAAA,EAAD,CAAe5F,MAAOA,EAAtB,UACE,cAAC8F,GAAA,EAAD,IACA,cAAC,IAAD,CAAWxH,MAAO,CAChByH,gBA1DgB,KAyDlB,SAGGtP,GAAO,cAAC8N,GAAD,CAAc9N,IAAKA,MAE7B,sBAAKqI,MAAO,CACVd,QAAS,eACT4E,SAAU,QACVoD,OAAQ,EACRC,MAAO,EACPC,SAAU,QACVC,UAAW,UANb,0BAOiB5L,WAASC,QAnET,4BAmE4B4L,eClEpCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxF,SAASyF,eAAe,SAM1BZ,M","file":"static/js/main.410a9d3e.chunk.js","sourcesContent":["\n/**\n * bookmarkの並びを指定する\n * * 'updated_at' ブクマ更新順\n * * 'new' ブクマ追加順\n * * 'ncode' 新着Nコード順 \n * * 'newlist' 新着更新順\n */\ntype BookmarkOrder = 'updated_at' | 'new' | 'ncode' | 'newlist';\n\n/**\n * SWRのキーとして与え、 SWRのfetcharとして `key => NarouApi.call(key)` として渡す値。\n */\ntype NarouApiCallKey = string;\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    async fetch(api: string): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(key: NarouApiCallKey) {\n        const res = await this.fetch(key);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n\n    static isnoticelist({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/narou/isnoticelist?max_page=${maxPage}`;\n    }\n    static isnoticelistR18({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/r18/isnoticelist?max_page=${maxPage}`;\n    }\n\n    static bookmarks(): NarouApiCallKey {\n        return `/narou/bookmarks`;\n    }\n    static bookmarksR18(): NarouApiCallKey {\n        return `/r18/bookmarks`;\n    }\n\n    static bookmark(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/narou/bookmarks/${no}?order=${order}`;\n    }\n    static bookmarkR18(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/r18/bookmarks/${no}?order=${order}`;\n    }\n\n    static novelInfo(ncode: string): NarouApiCallKey {\n        return `/narou/novels/${ncode}`;\n    }\n    static novelInfoR18(ncode: string): NarouApiCallKey {\n        return `/r18/novels/${ncode}`;\n    }\n}","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\nimport { IsNoticeListItem } from './IsNoticeListItem';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark1 = false }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark1: boolean,\n    }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(NarouApi.isnoticelist({ maxPage }),\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const bookmark = 1;\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark1) ? NarouApi.bookmark(bookmark, { order }) : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? NarouApi.isnoticelistR18({ maxPage }) : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      const score = (i: IsNoticeListItem) => {\n        if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n        if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n        return i.latest - i.bookmark;\n      }\n\n      // なろう、R18のアイテムを混ぜて、未読があって少ない順にし、\n      // 未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n        .slice(0, 30);\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { DateTime } from 'luxon';\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\nexport function hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nexport function nextLink(item: IsNoticeListItem): string {\n  if (hasUnread(item)) {\n    return `${item.base_url}${item.bookmark + 1}/`;\n  }\n  return `${item.base_url}${item.latest}/`;\n}\n\nexport function itemSummary(item: IsNoticeListItem): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nexport function unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { NarouApi } from './NarouApi';\nimport useSWR from 'swr';\n\ntype NovelInfo = {\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_no?: number;\n  bookmark_episode?: number;\n};\n\nfunction novelInfoPath(base_url?: string): string | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    // base_url is invalid\n    return null;\n  }\n  const [, host, ncode] = m;\n  switch (host) {\n    case 'ncode.syosetu.com':\n      return NarouApi.novelInfo(ncode);\n    case 'novel18.syosetu.com':\n      return NarouApi.novelInfoR18(ncode);\n    default:\n      // unknown host\n      return null;\n  }\n}\n\nexport function useNovelInfo(\n  api: NarouApi,\n  base_url?: string) {\n  const { data, error } = useSWR<NovelInfo>(\n    novelInfoPath(base_url),\n    async (path) => api.call(path)\n  );\n\n  return { data, error };\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Link\n} from '@material-ui/core';\nimport { IsNoticeListItem, nextLink } from \"./IsNoticeListItem\";\nimport { NarouApi } from './NarouApi';\nimport { useNovelInfo } from './useNovelInfo';\n\nexport function OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi;\n  item?: IsNoticeListItem;\n  onClose: () => void;\n}) {\n  const { data } = useNovelInfo(api, item?.base_url);\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={data?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Theme,\n  Toolbar,\n} from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { clearCache, useIsNoticeList } from './useIsNoticeList';\nimport { IsNoticeListItem, itemSummary, nextLink, unread } from \"./IsNoticeListItem\";\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { OpenConfirmDialog } from './OpenConfirmDialog';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark1, setBookmark1] = useState(false);\n\n  const { data: items, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark1 });\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : null, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    if (unreads !== null) {\n      document.title = `なろう 未読:${unreads}`;\n    }\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    setSelectedIndex(-1);\n  }, [enableR18, maxPage]);\n\n  useEffect(() => {\n    const index = items && items.length > 0 && unread(items[0]) > 0 ? 0 : -1;\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n          case 'Escape':\n            setSelectedIndex(defaultIndex);\n            break;\n          case 'r':\n            setEnableR18(v => !v);\n            break;\n          case 'b':\n            setBookmark1(v => !v);\n            break;\n          case '1':\n            setMaxPage(v => maxPageValue(v === maxPageValue(false)));\n            break;\n\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, defaultIndex, items]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { onClick: () => setConfirm(item) };\n    }\n  }, [setConfirm]);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...? status: ${error.status}</div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box>\n            <FormControlLabel\n              label=\"BM1\"\n              control={\n                <Switch\n                  checked={bookmark1}\n                  onChange={event => setBookmark1(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box m={2}>未読: {unreads ?? ''}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={selectedIndex === 0}\n            disableRipple={true}\n            ref={defaultRef}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <List>\n          {items?.map((item, index) =>\n            <ListItem key={item.base_url} button={true}\n              {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n              disableRipple={true}\n              onFocusVisible={() => setSelectedIndex(index)}\n              {...buttonProps(item)} >\n              <ListItemAvatar>\n                <Badge overlap=\"circle\" {...badgeProps(item)} >\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={itemSummary(item)}\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n            </ListItem>)}\n        </List>\n      </Box >\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        {api && <NarouUpdates api={api} />}\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}