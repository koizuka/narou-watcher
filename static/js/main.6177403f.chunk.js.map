{"version":3,"sources":["narouApi/NarouApi.ts","narouApi/useIsNoticeList.tsx","narouApi/IsNoticeListItem.tsx","NarouLoginForm.tsx","narouApi/useBookmarkInfo.ts","narouApi/useNovelInfo.tsx","OpenConfirmDialog.tsx","BookmarkSelector.tsx","NarouUpdates.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarouApi","server","this","replace","api","a","fetch","credentials","id","password","formData","FormData","append","method","body","res","key","ok","json","maxPage","no","order","ncode","clearCache","mutate","ascend","b","f","fa","fb","useIsNoticeList","enableR18","bookmark","useSWR","isnoticelist","path","call","onErrorRetry","error","console","log","status","raw_items","data","bookmark_items","bookmark_error","isnoticelistR18","raw_items18","error18","raw_items2","useMemo","keys","Set","map","i","base_url","adds","filter","is_notice","has","length","items","undefined","isR18","update_time","DateTime","fromISO","sort","cmps","c","compare","latest","Number","MAX_SAFE_INTEGER","score","slice","hasUnread","item","nextLink","itemSummary","fields","title","push","completed","join","unread","Math","max","NarouLoginForm","props","useState","userId","setUserId","setPassword","setError","postLogin","useCallback","login","text","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","CardContent","Box","display","flexDirection","justifyContent","TextField","name","label","value","onChange","e","target","onKeyPress","type","inputRef","CardActions","style","variant","useBookmarkInfo","r18","bookmarksR18","bookmarks","reduce","d","num_items","useNovelInfo","info","m","match","warn","host","extractInfoPath","novelInfo","novelInfoR18","OpenConfirmDialog","bookmarkInfo","bookmark_no","bookmark_url","url","Link","href","author_url","author_name","size","window","useStyles","makeStyles","root","color","icon","fill","withWidth","setBookmark","onChangeBookmark","width","classes","setOpen","large","isWidthUp","Select","disableUnderline","onOpen","event","MenuItem","Object","k","UserTopURL","theme","createStyles","backdrop","zIndex","drawer","badgeProps","badgeContent","maxPageValue","sw","NarouUpdateList","onUnauthorized","setEnableR18","setMaxPage","unreads","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoView","behavior","scrollMode","index","defaultRef","onKeyDown","len","preventDefault","metaKey","ctrlKey","v","shiftKey","cur","numbers","reverse","prevBookmark","nextBookmark","addEventListener","removeEventListener","buttonProps","component","disabled","location","reload","JSON","stringify","baseUrl","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disableRipple","ref","alignItems","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","ListItemSecondaryAction","IconButton","edge","Info","right","bottom","Fab","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","App","prefersDarkMode","useMediaQuery","createMuiTheme","palette","cyan","setApi","hostError","setHostError","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","CssBaseline","refreshInterval","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6177403f.chunk.js","sourcesContent":["\n/**\n * bookmarkの並びを指定する\n * * 'updated_at' ブクマ更新順\n * * 'new' ブクマ追加順\n * * 'ncode' 新着Nコード順 \n * * 'newlist' 新着更新順\n */\ntype BookmarkOrder = 'updated_at' | 'new' | 'ncode' | 'newlist';\n\n/**\n * SWRのキーとして与え、 SWRのfetcharとして `key => NarouApi.call(key)` として渡す値。\n */\ntype NarouApiCallKey = string;\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    get baseUrl(): string { return this.server; }\n\n    async fetch(api: string): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(key: NarouApiCallKey) {\n        const res = await this.fetch(key);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n\n    static isnoticelist({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/narou/isnoticelist?max_page=${maxPage}`;\n    }\n    static isnoticelistR18({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/r18/isnoticelist?max_page=${maxPage}`;\n    }\n\n    static bookmarks(): NarouApiCallKey {\n        return `/narou/bookmarks/`;\n    }\n    static bookmarksR18(): NarouApiCallKey {\n        return `/r18/bookmarks/`;\n    }\n\n    static bookmark(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/narou/bookmarks/${no}?order=${order}`;\n    }\n    static bookmarkR18(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/r18/bookmarks/${no}?order=${order}`;\n    }\n\n    static novelInfo(ncode: string): NarouApiCallKey {\n        return `/narou/novels/${ncode}`;\n    }\n    static novelInfoR18(ncode: string): NarouApiCallKey {\n        return `/r18/novels/${ncode}`;\n    }\n}","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\nimport { IsNoticeListItem } from './IsNoticeListItem';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark = 0 }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark: number,\n    }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(NarouApi.isnoticelist({ maxPage }),\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark) ? NarouApi.bookmark(bookmark, { order }) : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? NarouApi.isnoticelistR18({ maxPage }) : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      const score = (i: IsNoticeListItem) => {\n        if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n        if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n        return i.latest - i.bookmark;\n      }\n\n      // なろう、R18のアイテムを混ぜて、未読があって少ない順にし、\n      // 未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n        .slice(0, 30);\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { DateTime } from 'luxon';\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\nexport function hasUnread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): boolean {\n  return item.latest > item.bookmark;\n}\n\nexport function nextLink(item: Pick<IsNoticeListItem, 'latest' | 'bookmark' | 'base_url'>): string {\n  if (hasUnread(item)) {\n    return `${item.base_url}${item.bookmark + 1}/`;\n  }\n  return `${item.base_url}${item.latest}/`;\n}\n\nexport function itemSummary(item: Pick<IsNoticeListItem, 'title' | 'bookmark' | 'latest' | 'completed'>): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nexport function unread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\nimport { NarouApi } from \"./NarouApi\"\n\nexport type BookmarkInfo = {\n    [no: number]: {\n        name: string;\n        num_items: number;\n    }\n}\n\ntype BookmarkInfoRecord = {\n    no: number;\n    name: string;\n    num_items: number;\n}\n\nexport function useBookmarkInfo(api: NarouApi | null, r18: boolean) {\n    const { data, error } = useSWR<BookmarkInfoRecord[]>(\n        api ?\n            (r18 ? NarouApi.bookmarksR18() : NarouApi.bookmarks())\n            :\n            null,\n        async key => api ? api.call(key) : [],\n    )\n\n    const info: BookmarkInfo | undefined = useMemo(() => {\n        if (data) {\n            return data.reduce<BookmarkInfo>((a, d) => {\n                a[d.no] = {\n                    name: d.name,\n                    num_items: d.num_items,\n                };\n                return a;\n            }, {});\n        } else {\n            return undefined;\n        }\n    }, [data]);\n\n    return { data: info, error };\n}","import { NarouApi } from './NarouApi';\nimport useSWR from 'swr';\nimport { useMemo } from 'react';\n\ntype NovelInfo = {\n  base_url: string;\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_url?: string;\n  bookmark_no?: number;\n  bookmark_episode?: number;\n};\n\nfunction extractInfoPath(base_url?: string): { host: string, ncode: string } | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([0-9a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    console.warn(`base_url is invalid: ${base_url}`);\n    return null;\n  }\n  const [, host, ncode] = m;\n  return { host, ncode };\n}\n\nexport function useNovelInfo(\n  api: NarouApi,\n  base_url?: string) {\n\n  const info = useMemo(() => extractInfoPath(base_url), [base_url]);\n  const key = useMemo(() => {\n    if (!info) {\n      return null;\n    }\n    switch (info.host) {\n      case 'ncode.syosetu.com':\n        return NarouApi.novelInfo(info.ncode);\n      case 'novel18.syosetu.com':\n        return NarouApi.novelInfoR18(info.ncode);\n      default:\n        console.warn(`unknown host: ${info.host}`);\n        return null;\n    }\n  }, [info])\n\n  const { data, error } = useSWR<NovelInfo>(key, async path => api.call(path));\n\n  return { data, error };\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Link\n} from '@material-ui/core';\nimport { useMemo } from 'react';\nimport { IsNoticeListItem, nextLink } from './narouApi/IsNoticeListItem';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { useNovelInfo } from './narouApi/useNovelInfo';\n\nexport function OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi;\n  item?: IsNoticeListItem;\n  onClose: () => void;\n}) {\n  const { data: novelInfo } = useNovelInfo(api, item?.base_url);\n  const { data: bookmarkInfo } = useBookmarkInfo(novelInfo?.bookmark_no ? api : null, item?.isR18 || false);\n\n  const bookmark = useMemo(() => {\n    console.log('novelInfo:', novelInfo);\n    console.log('bookmarkInfo:', bookmarkInfo);\n    const bookmark_no = novelInfo?.bookmark_no\n    if (bookmarkInfo && bookmark_no && novelInfo?.bookmark_url) {\n      return {\n        no: bookmark_no,\n        name: bookmarkInfo[bookmark_no].name,\n        url: novelInfo.bookmark_url,\n      };\n    }\n    return undefined;\n  }, [novelInfo, bookmarkInfo])\n\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={novelInfo?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      {bookmark && <DialogContent>ブックマーク:<Link href={bookmark.url} target=\"_blank\">{bookmark.name}</Link></DialogContent>}\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { useState } from 'react';\nimport {\n  isWidthUp, makeStyles, MenuItem,\n  Select,\n  withWidth\n} from '@material-ui/core';\nimport { BookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\n\n// prevent text/icon color to white when darkMode (since this Select is on the AppBar)\nconst useStyles = makeStyles({\n  root: {\n    color: 'black',\n  },\n  icon: {\n    fill: 'black',\n  },\n});\n\nfunction BookmarkSelector({ bookmarks, bookmark, onChangeBookmark: setBookmark, width }: {\n  bookmarks: BookmarkInfo | undefined;\n  bookmark: number;\n  onChangeBookmark: (newBookmark: number) => void;\n  width: Breakpoint;\n}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const large = isWidthUp('sm', width);\n\n  return (\n    <Select\n      classes={{ root: classes.root, icon: classes.icon }}\n      disableUnderline={true}\n      open={open} onOpen={() => setOpen(true)} onClose={() => setOpen(false)}\n      value={bookmark} onChange={event => setBookmark(Number(event.target.value))}>\n      <MenuItem key={0} value={0}>{open || large ? 'ブックマークなし' : 'BM-'}</MenuItem>\n      {bookmarks && Object.keys(bookmarks).map(k => <MenuItem key={k} value={k}>{open || large ? bookmarks[Number(k)].name : `BM${bookmark}`}</MenuItem>)}\n    </Select>\n  );\n}\n\nexport default withWidth()(BookmarkSelector);","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Theme,\n  Toolbar,\n} from '@material-ui/core';\nimport { Book, Info } from '@material-ui/icons';\nimport { clearCache, useIsNoticeList } from './narouApi/useIsNoticeList';\nimport { IsNoticeListItem, itemSummary, nextLink, unread } from \"./narouApi/IsNoticeListItem\";\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './narouApi/NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { OpenConfirmDialog } from './OpenConfirmDialog';\nimport { BookmarkInfo, useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport BookmarkSelector from './BookmarkSelector';\n\nconst UserTopURL = 'https://syosetu.com/user/top/';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nfunction nextBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = Object.keys(bookmarks).map(k => Number(k));\n  for (const i of numbers) {\n    if (i > cur) {\n      return i;\n    }\n  }\n  return 0;\n}\n\nfunction prevBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = Object.keys(bookmarks).map(k => Number(k)).reverse();\n  if (numbers.length > 0) {\n    if (cur === 0) {\n      return numbers[0];\n    }\n    for (const i of numbers) {\n      if (i < cur) {\n        return i;\n      }\n    }\n  }\n  return 0;\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark, setBookmark] = useState(0);\n\n  const { data: items, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark });\n  const { data: bookmarks } = useBookmarkInfo(server, false);\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : null, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    if (unreads !== null) {\n      document.title = `なろう 未読:${unreads}`;\n    }\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    setSelectedIndex(-1);\n  }, [enableR18, maxPage]);\n\n  useEffect(() => {\n    const index = items && items.length > 0 && unread(items[0]) > 0 ? 0 : -1;\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n          case 'Escape':\n            setSelectedIndex(defaultIndex);\n            break;\n          case 'r':\n            if (!event.metaKey && !event.ctrlKey) {\n              setEnableR18(v => !v);\n            }\n            break;\n          case 'b':\n          case 'B':\n            if (!event.metaKey && !event.ctrlKey) {\n              if (bookmarks) {\n                setBookmark(\n                  event.shiftKey\n                    ? prevBookmark(bookmarks, bookmark)\n                    : nextBookmark(bookmarks, bookmark)\n                );\n              }\n            }\n            break;\n          case '1':\n            if (!event.metaKey && !event.ctrlKey) {\n              setMaxPage(v => maxPageValue(v === maxPageValue(false)));\n            }\n            break;\n          case 'h':\n            if (!event.metaKey && !event.ctrlKey) {\n              window.open(UserTopURL, '_blank');\n            }\n            break;\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, defaultIndex, items, bookmarks, bookmark]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { disabled: true };\n    }\n  }, []);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div onClick={() => window.location.reload()}>Server({JSON.stringify(server.baseUrl)}) is not working...? status: {error.status}</div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box>\n            <BookmarkSelector bookmarks={bookmarks} bookmark={bookmark} onChangeBookmark={setBookmark} />\n          </Box>\n          <Box m={2}>未読: {unreads ?? ''}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={selectedIndex === 0}\n            disableRipple={true}\n            ref={defaultRef}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" alignItems=\"center\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <Box maxWidth={600}>\n          <List>\n            {items?.map((item, index) =>\n              <ListItem key={item.base_url} button={true}\n                {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n                disableRipple={true}\n                onFocusVisible={() => setSelectedIndex(index)}\n                {...buttonProps(item)} >\n                <ListItemAvatar>\n                  <Badge overlap=\"circle\" {...badgeProps(item)} >\n                    <Avatar>\n                      <Book color={item.isR18 ? \"secondary\" : undefined} />\n                    </Avatar>\n                  </Badge>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={itemSummary(item)}\n                  secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" onClick={() => setConfirm(item)} disableRipple={true}>\n                    <Info />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>)}\n          </List>\n        </Box>\n        <Box position=\"fixed\" right=\"20px\" bottom=\"20px\">\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            disableRipple={true}\n            component=\"a\"\n            href={UserTopURL}\n            target=\"_blank\"\n          >ユーザーホーム</Fab>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        {api && <NarouUpdates api={api} />}\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}