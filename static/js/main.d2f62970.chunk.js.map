{"version":3,"sources":["NarouLoginForm.tsx","NarouUpdates.tsx","useIsNoticeList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarouLoginForm","props","useState","userId","setUserId","password","setPassword","error","setError","postLogin","useCallback","a","formData","FormData","append","console","log","entries","pair","fetch","server","method","body","credentials","res","ok","text","status","statusText","json","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","id","Box","TextField","name","label","value","onChange","e","target","onKeyPress","key","type","inputRef","nextLink","item","bookmark","latest","base_url","hasUnread","unread","Math","max","NarouUpdateList","ignoreDuration","onUnauthorized","enableR18","setEnableR18","host","useSWR","onErrorRetry","raw_items","data","raw_items18","error18","items","useMemo","undefined","tooOld","DateTime","now","minus","map","i","isR18","update_time","fromISO","filter","sort","b","useIsNoticeList","unreads","head","length","headLink","useEffect","document","title","onKeyDown","event","window","addEventListener","removeEventListener","JSON","stringify","isDefaultOpen","m","display","flexDirection","bgcolor","FormControlLabel","control","Switch","checked","width","variant","href","ListItem","ListItemAvatar","Badge","color","badgeContent","Avatar","Book","ListItemText","primary","secondary","toFormat","author_name","NarouUpdates","loginMode","setLoginMode","IgnoreDuration","Duration","fromObject","days","App","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","setServer","location","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","Link","CssBaseline","refreshInterval","fetcher","args","then","Error","style","position","bottom","right","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2f62970.chunk.js","sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\n\nexport function NarouLoginForm(props: { server: string; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const formData = new FormData();\n    formData.append('id', userId);\n    formData.append('password', password);\n    console.log(formData);\n    for (const pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n    }\n\n    const res: Response = await fetch(`${props.server}/narou/login`, {\n      method: 'POST',\n      body: formData,\n      credentials: 'include',\n    });\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      const json = await res.json();\n      if (json) {\n        props.onLogin();\n      }\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <form id=\"loginForm\">\n      <h2>小説家になろうのログイン情報</h2>\n      <Box>\n        <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n          value={userId} onChange={e => setUserId(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              passwordRef.current?.focus();\n            }\n          }}></TextField>\n      </Box>\n      <Box><TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n        value={password} onChange={e => setPassword(e.target.value)}\n        inputRef={passwordRef} onKeyPress={e => {\n          if (e.key === 'Enter') {\n            postLogin();\n          }\n        }}></TextField></Box>\n      <Button onClick={postLogin}>login</Button>\n    </form>\n  </>);\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { Avatar, Badge, Box, Button, FormControlLabel, ListItem, ListItemAvatar, ListItemText, Switch } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { Duration } from 'luxon';\nimport { NarouLoginForm } from './NarouLoginForm';\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction NarouUpdateList({ server, ignoreDuration, onUnauthorized }: { server: string, ignoreDuration: Duration, onUnauthorized: () => void }) {\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(server, { ignoreDuration, enableR18 });\n\n  const unreads = useMemo(() => items?.filter(i => i.bookmark < i.latest), [items]);\n  const head = useMemo(() => (unreads && unreads.length > 0) ? unreads[unreads.length - 1] : undefined, [unreads]);\n  const headLink = useMemo(() => head ? nextLink(head) : undefined, [head]);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads?.length}`;\n  }, [unreads]);\n\n  useEffect(() => {\n    if (headLink !== undefined) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          window.open(headLink, '_blank');\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [headLink]);\n\n  if (error) {\n    console.log(`error = ${error}`);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <div>Loading...</div>;\n  }\n\n  const isDefaultOpen = function (item: IsNoticeListItem): boolean {\n    if (!head) {\n      return false;\n    }\n    return item.base_url === head.base_url;\n  }\n\n  return (\n    <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      <p><FormControlLabel label=\"R18を含める\" control={<Switch checked={enableR18} onChange={(event) => setEnableR18(event.target.checked)} />} /></p>\n      <p>{`未読: ${unreads?.length} 作品.`}</p>\n      {items?.map(item => <Box key={item.base_url} width=\"100%\">\n        <Button\n          variant={isDefaultOpen(item) ? 'contained' : 'outlined'}\n          href={nextLink(item)} target=\"_blank\">\n          <ListItem>\n            <ListItemAvatar>\n              <Badge color=\"primary\" badgeContent={unread(item)}>\n                <Avatar>\n                  <Book color={item.isR18 ? \"secondary\" : undefined} />\n                </Avatar>\n              </Badge>\n            </ListItemAvatar>\n            <ListItemText\n              primary={hasUnread(item) ?\n                `${item.title} (${item.bookmark}/${item.latest})`\n                :\n                `${item.title} (${item.latest})`}\n              secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n          </ListItem>\n        </Button>\n      </Box>\n      )}\n    </Box>\n  );\n}\n\nexport function NarouUpdates({ server, ignoreDuration }: { server: string, ignoreDuration: Duration }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm server={server} onLogin={() => {\n      console.log('logged in!');\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <Box>\n      <NarouUpdateList server={server} ignoreDuration={ignoreDuration}\n        onUnauthorized={() => setLoginMode(true)} />\n      <Button onClick={async () => {\n        await fetch(`${server}/narou/logout`, {\n          credentials: 'include',\n        });\n        setLoginMode(true);\n      }}>logout</Button>\n    </Box>\n  );\n}\n","import useSWR from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime, Duration } from 'luxon';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  isR18: boolean;\n};\n\nexport function useIsNoticeList(\n  host: string,\n  { ignoreDuration, enableR18 }: { ignoreDuration: Duration, enableR18: boolean }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(host ? `${host}/narou/isnoticelist` : null,\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((host && !error && enableR18) ? `${host}/r18/isnoticelist` : null);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const tooOld = DateTime.now().minus(ignoreDuration);\n\n      // なろう、R18のアイテムを混ぜて、古いアイテムを捨てて、更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .filter(i => i.update_time > tooOld)\n        .sort((a, b) => (a.update_time > b.update_time) ? -1 :\n          (a.update_time < b.update_time) ? 1 : 0\n        );\n      return n;\n    },\n    [raw_items, raw_items18, ignoreDuration]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime, Duration } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\n\nconst IgnoreDuration = Duration.fromObject({ days: 30 });\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [server, setServer] = useState('');\n  useEffect(() => {\n    setServer(getServerAddress(document.location));\n  }, [])\n\n  if (server === '') {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n        fetcher: (args) => fetch(args, {\n          credentials: 'include',\n        }).then(res => {\n          if (!res.ok) {\n            class FetchError extends Error {\n              status: number = 0;\n              name = 'FetchError';\n            }\n            const error = new FetchError(`failed to fetch: status=${res.status}`);\n            error.status = res.status;\n            throw error;\n          }\n          return res.json();\n        })\n      }}>\n        <NarouUpdates server={server} ignoreDuration={IgnoreDuration} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\"\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}