{"version":3,"sources":["NarouUpdates.tsx","useIsNoticeList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nextLink","item","bookmark","latest","base_url","hasUnread","unread","Math","max","NarouLoginForm","props","useState","userId","setUserId","password","setPassword","postLogin","useCallback","a","formData","FormData","append","console","log","entries","pair","fetch","host","method","body","res","json","onLogin","id","Box","TextField","name","label","value","onChange","e","target","type","Button","onClick","NarouUpdates","ignoreDuration","URLSearchParams","window","location","search","get","loginMode","setLoginMode","enableR18","setEnableR18","useSWR","onErrorRetry","error","status","raw_items","data","raw_items18","error18","items","useMemo","undefined","tooOld","DateTime","now","minus","map","i","isR18","update_time","fromISO","filter","sort","b","useIsNoticeList","unreads","head","length","headLink","useEffect","document","title","onKeyDown","event","key","open","addEventListener","removeEventListener","postLogout","JSON","stringify","isDefaultOpen","m","display","flexDirection","bgcolor","FormControlLabel","control","Switch","checked","width","variant","href","ListItem","ListItemAvatar","Badge","color","badgeContent","Avatar","Book","ListItemText","primary","secondary","toFormat","author_name","IgnoreDuration","Duration","fromObject","days","App","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","ThemeProvider","CssBaseline","refreshInterval","fetcher","args","credentials","then","ok","Error","style","position","bottom","right","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb48f982.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Avatar, Badge, Box, Button, FormControlLabel, ListItem, ListItemAvatar, ListItemText, Switch, TextField } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { Duration } from 'luxon';\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction NarouLoginForm(props: { host: string, onLogin: () => void }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n\n  const postLogin = useCallback(async () => {\n    const formData = new FormData();\n    formData.append('id', userId);\n    formData.append('password', password);\n    console.log(formData);\n    for (const pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n    }\n\n    const res = await fetch(`${props.host}/narou/login`, {\n      method: 'POST',\n      body: formData,\n    });\n    const json = await res.json();\n    if (json) {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  return <form id=\"loginForm\">\n    <h2>小説家になろうのログイン情報</h2>\n    <Box><TextField id=\"id\" name=\"id\" label=\"ID or email\" value={userId} onChange={e => setUserId(e.target.value)}></TextField></Box>\n    <Box><TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)}></TextField></Box>\n    <Button onClick={postLogin}>login</Button>\n  </form>\n}\n\nexport function NarouUpdates({ ignoreDuration }: { ignoreDuration: Duration }) {\n  const host = new URLSearchParams(window.location.search).get('server') || 'http://localhost:7676';\n\n  const [loginMode, setLoginMode] = useState(false);\n\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(host, { ignoreDuration, enableR18 });\n\n  const unreads = useMemo(() => items?.filter(i => i.bookmark < i.latest), [items]);\n  const head = useMemo(() => (unreads && unreads.length > 0) ? unreads[unreads.length - 1] : undefined, [unreads]);\n  const headLink = useMemo(() => head ? nextLink(head) : undefined, [head]);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads?.length}`;\n  }, [unreads]);\n\n  useEffect(() => {\n    if (headLink !== undefined) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          window.open(headLink, '_blank');\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [headLink]);\n\n  const postLogout = useCallback(async () => {\n    await fetch(`${host}/narou/logout`);\n    setLoginMode(true);\n  }, [host]);\n\n  if (loginMode) {\n    return <NarouLoginForm host={host} onLogin={() => setLoginMode(false)} />\n  }\n\n  if (error) {\n    if (error.status === 401) {\n      setLoginMode(true);\n    }\n    return <div>Server({JSON.stringify(host)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <div>Loading...</div>;\n  }\n\n  const isDefaultOpen = function (item: IsNoticeListItem): boolean {\n    if (!head) {\n      return false;\n    }\n    return item.base_url === head.base_url;\n  }\n\n  return (\n    <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      <p><FormControlLabel label=\"R18を含める\" control={<Switch checked={enableR18} onChange={(event) => setEnableR18(event.target.checked)} />} /></p>\n      <p>{`未読: ${unreads?.length} 作品.`}</p>\n      {items?.map(item => <Box key={item.base_url} width=\"100%\">\n        <Button\n          variant={isDefaultOpen(item) ? 'contained' : 'outlined'}\n          href={nextLink(item)} target=\"_blank\">\n          <ListItem>\n            <ListItemAvatar>\n              <Badge color=\"primary\" badgeContent={unread(item)}>\n                <Avatar>\n                  <Book color={item.isR18 ? \"secondary\" : undefined} />\n                </Avatar>\n              </Badge>\n            </ListItemAvatar>\n            <ListItemText\n              primary={hasUnread(item) ?\n                `${item.title} (${item.bookmark}/${item.latest})`\n                :\n                `${item.title} (${item.latest})`}\n              secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n          </ListItem>\n        </Button>\n      </Box>\n      )}\n      <Button onClick={postLogout}>logout</Button>\n    </Box>\n  );\n}\n","import useSWR from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime, Duration } from 'luxon';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  isR18: boolean;\n};\n\nexport function useIsNoticeList(\n  host: string,\n  { ignoreDuration, enableR18 }: { ignoreDuration: Duration, enableR18: boolean }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(`${host}/narou/isnoticelist`,\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? `${host}/r18/isnoticelist` : null);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const tooOld = DateTime.now().minus(ignoreDuration);\n\n      // なろう、R18のアイテムを混ぜて、古いアイテムを捨てて、更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .filter(i => i.update_time > tooOld)\n        .sort((a, b) => (a.update_time > b.update_time) ? -1 :\n          (a.update_time < b.update_time) ? 1 : 0\n        );\n      return n;\n    },\n    [raw_items, raw_items18, ignoreDuration]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime, Duration } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useMemo } from 'react';\nimport { CssBaseline, useMediaQuery } from '@material-ui/core';\n\nconst IgnoreDuration = Duration.fromObject({ days: 30 });\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n        fetcher: (args) => fetch(args, {\n          credentials: 'include',\n        }).then(res => {\n          if (!res.ok) {\n            class FetchError extends Error {\n              status: number = 0;\n              name = 'FetchError';\n            }\n            const error = new FetchError(`failed to fetch: status=${res.status}`);\n            error.status = res.status;\n            throw error;\n          }\n          return res.json();\n        })\n      }}>\n        <NarouUpdates ignoreDuration={IgnoreDuration} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\"\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}