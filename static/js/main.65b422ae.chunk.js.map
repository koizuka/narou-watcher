{"version":3,"sources":["NarouLoginForm.tsx","NarouUpdates.tsx","useIsNoticeList.tsx","NarouApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NarouLoginForm","props","useState","userId","setUserId","password","setPassword","error","setError","postLogin","useCallback","a","api","login","res","ok","text","status","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","id","Box","TextField","name","label","value","onChange","e","target","onKeyPress","key","type","inputRef","nextLink","item","bookmark","latest","base_url","hasUnread","unread","Math","max","badgeProps","color","badgeContent","OpenConfirmDialog","title","author_name","variant","window","NarouUpdateList","server","ignoreDuration","onUnauthorized","enableR18","setEnableR18","useSWR","path","call","onErrorRetry","console","log","raw_items","data","raw_items18","error18","items","useMemo","undefined","tooOld","DateTime","now","minus","map","i","isR18","update_time","fromISO","filter","sort","b","useIsNoticeList","unreads","length","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoViewIfNeeded","index","reduce","prev","cur","onKeyDown","event","len","preventDefault","addEventListener","removeEventListener","buttonProps","component","href","JSON","stringify","m","display","flexDirection","bgcolor","alignItems","FormControlLabel","control","Switch","checked","disabled","List","ListItem","button","selected","ref","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","NarouUpdates","loginMode","setLoginMode","mutate","logout","NarouApi","this","replace","fetch","credentials","formData","FormData","append","method","body","json","IgnoreDuration","Duration","fromObject","days","App","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","setApi","location","host","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","CssBaseline","refreshInterval","style","position","bottom","right","fontSize","fontStyle","toISO","Typography","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65b422ae.chunk.js","sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <form id=\"loginForm\">\n      <h2>小説家になろうのログイン情報</h2>\n      <Box>\n        <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n          value={userId} onChange={e => setUserId(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              passwordRef.current?.focus();\n            }\n          }}></TextField>\n      </Box>\n      <Box><TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n        value={password} onChange={e => setPassword(e.target.value)}\n        inputRef={passwordRef} onKeyPress={e => {\n          if (e.key === 'Enter') {\n            postLogin();\n          }\n        }}></TextField></Box>\n      <Button onClick={postLogin}>login</Button>\n    </form>\n  </>);\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Avatar, Badge, BadgeTypeMap, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, List, ListItem, ListItemAvatar, ListItemText, Switch } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { clearCache, IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { Duration } from 'luxon';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './NarouApi';\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction OpenConfirmDialog({ item, onClose }: { item?: IsNoticeListItem, onClose: () => void }) {\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:{item?.author_name}</DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction NarouUpdateList({ server, ignoreDuration, onUnauthorized }: { server: NarouApi, ignoreDuration: Duration, onUnauthorized: () => void }) {\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(server, { ignoreDuration, enableR18 });\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : 0, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads}`;\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      node.scrollIntoViewIfNeeded(); // non standard method(not supported on Firefox)\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    const index = items ?\n      items.reduce((prev, cur, i) => cur.bookmark < cur.latest ? i : prev, -1)\n      : -1;\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, items]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        target: \"_blank\",\n      };\n    } else {\n      return { onClick: () => setConfirm(item) };\n    }\n  }, [setConfirm]);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      <OpenConfirmDialog item={confirm} onClose={() => setConfirm(undefined)} />\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Box><FormControlLabel label=\"R18を含める\" control={<Switch checked={enableR18} onChange={(event) => setEnableR18(event.target.checked)} />} /></Box>\n        <Box m={2}>{`未読: ${unreads} 作品.`}</Box>\n        <Button\n          variant=\"contained\"\n          disabled={defaultIndex === selectedIndex}\n          onClick={() => setSelectedIndex(defaultIndex)}>最古の未読を選択</Button>\n      </Box>\n      <List>\n        {items?.map((item, index) =>\n          <ListItem key={item.base_url} button={true}\n            {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n            onFocusVisible={() => setSelectedIndex(index)}\n            {...buttonProps(item)} >\n            <ListItemAvatar>\n              <Badge overlap=\"circle\" {...badgeProps(item)} >\n                <Avatar>\n                  <Book color={item.isR18 ? \"secondary\" : undefined} />\n                </Avatar>\n              </Badge>\n            </ListItemAvatar>\n            <ListItemText\n              primary={hasUnread(item) ?\n                `${item.title} (${item.bookmark}/${item.latest})`\n                :\n                `${item.title} (${item.latest})`}\n              secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n          </ListItem>)}\n      </List>\n    </Box >\n  );\n}\n\nexport function NarouUpdates({ api, ignoreDuration }: { api: NarouApi, ignoreDuration: Duration }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  useEffect(() => {\n    clearCache();\n  }, [loginMode]);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <Box>\n      <NarouUpdateList server={api} ignoreDuration={ignoreDuration}\n        onUnauthorized={() => setLoginMode(true)} />\n      <Button onClick={async () => {\n        await api.logout();\n        setLoginMode(true);\n      }}>logout</Button>\n    </Box>\n  );\n}\n","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime, Duration } from 'luxon';\nimport { NarouApi } from './NarouApi';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  isR18: boolean;\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { ignoreDuration, enableR18 }: { ignoreDuration: Duration, enableR18: boolean }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>('/narou/isnoticelist',\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? '/r18/isnoticelist' : null,\n    async path => api.call(path),\n  );\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const tooOld = DateTime.now().minus(ignoreDuration);\n\n      // なろう、R18のアイテムを混ぜて、古いアイテムを捨てて、更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .filter(i => i.update_time > tooOld)\n        .sort((a, b) => (a.update_time > b.update_time) ? -1 :\n          (a.update_time < b.update_time) ? 1 : 0\n        );\n      return n;\n    },\n    [raw_items, raw_items18, ignoreDuration]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","type Api = '/narou/login' | '/narou/logout' | '/narou/isnoticelist' | '/r18/isnoticelist';\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    async fetch(api: Api): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(api: '/narou/isnoticelist' | '/r18/isnoticelist') {\n        const res = await this.fetch(api);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n}","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime, Duration } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nconst IgnoreDuration = Duration.fromObject({ days: 30 });\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    setApi(host ? new NarouApi(host) : null);\n  }, [])\n\n  if (!api) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        <NarouUpdates api={api} ignoreDuration={IgnoreDuration} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}