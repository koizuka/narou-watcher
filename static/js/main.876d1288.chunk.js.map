{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["IgnoreDuration","Duration","fromObject","days","nextLink","item","bookmark","latest","base_url","NarouUpdates","useState","enableR18","setEnableR18","host","useSWR","raw_items","data","error","raw_items18","error18","items","useMemo","undefined","tooOld","DateTime","now","minus","map","i","isR18","update_time","fromISO","filter","sort","a","b","useIsNoticeList","unreads","headLink","length","useEffect","document","title","onKeyDown","event","key","window","open","addEventListener","removeEventListener","Box","m","display","flexDirection","bgcolor","Button","variant","color","href","target","FormControlLabel","label","control","Switch","checked","onChange","width","ListItem","ListItemAvatar","Badge","badgeContent","Math","max","Avatar","Book","ListItemText","primary","secondary","toFormat","App","className","value","refreshInterval","fetcher","args","fetch","then","res","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.876d1288.chunk.js","sourcesContent":["//import './App.css';\nimport useSWR, { SWRConfig } from 'swr';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Avatar, Badge, Box, Button, FormControlLabel, ListItem, ListItemAvatar, ListItemText, Switch } from '@material-ui/core';\nimport { DateTime, Duration } from 'luxon';\nimport { Book } from '@material-ui/icons';\n\nconst IgnoreDuration = Duration.fromObject({ days: 30 });\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n};\n\ntype IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  isR18: boolean;\n};\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction useIsNoticeList(enableR18: boolean) {\n  const host = 'http://localhost:7676';\n\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(`${host}/narou/isnoticelist`);\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? `${host}/r18/isnoticelist` : null);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const tooOld = DateTime.now().minus(IgnoreDuration);\n\n      // なろう、R18のアイテムを混ぜて、古いアイテムを捨てて、更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .filter(i => i.update_time > tooOld)\n        .sort((a, b) =>\n          (a.update_time > b.update_time) ? -1 :\n            (a.update_time < b.update_time) ? 1 : 0\n        )\n      return n;\n    },\n    [raw_items, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n\nfunction NarouUpdates() {\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(enableR18);\n\n  const unreads = useMemo(() => items?.filter(i => i.bookmark < i.latest), [items]);\n  const headLink = useMemo(() => (unreads && unreads.length > 0) ? nextLink(unreads[0]) : undefined, [unreads]);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads?.length}`;\n  }, [unreads]);\n\n  useEffect(() => {\n    if (headLink !== undefined) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          window.open(headLink, '_blank');\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      }\n    }\n  }, [headLink]);\n\n  if (error) {\n    return <div>Server is not working...?</div>\n  }\n  if (!items) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      {unreads?.map((item, i) =>\n        <Button key={item.base_url} variant=\"contained\" color={!i ? \"primary\" : undefined} href={nextLink(item)} target=\"_blank\">\n          {`${item.title}(${item.bookmark + 1}部分)を開く${!i && ' [Enter]'}`}\n        </Button>\n      )}\n      <p><FormControlLabel label=\"R18を含める\" control={\n        <Switch checked={enableR18} onChange={(event) => setEnableR18(event.target.checked)} />\n      } /></p>\n      <p>{`未読: ${unreads?.length} 作品.`}</p>\n      {items?.map(item =>\n        <Box key={item.base_url} width=\"100%\">\n          <Button variant=\"outlined\" href={nextLink(item)} target=\"_blank\">\n            <ListItem>\n              <ListItemAvatar>\n                <Badge color=\"primary\" badgeContent={Math.max(item.latest - item.bookmark, 0)}>\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={\n                  item.bookmark < item.latest ?\n                    `${item.title} (${item.bookmark}/${item.latest})`\n                    :\n                    `${item.title} (${item.latest})`\n                }\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新`} />\n            </ListItem>\n          </Button>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n        fetcher: (args) => fetch(args).then(res => res.json())\n      }}>\n        <NarouUpdates />\n      </SWRConfig>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}