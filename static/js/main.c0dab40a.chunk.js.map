{"version":3,"sources":["NarouUpdates.tsx","useIsNoticeList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nextLink","item","bookmark","latest","base_url","hasUnread","unread","Math","max","NarouUpdates","ignoreDuration","host","URLSearchParams","window","location","search","get","console","log","useState","enableR18","setEnableR18","useSWR","raw_items","data","error","raw_items18","error18","items","useMemo","undefined","tooOld","DateTime","now","minus","map","i","isR18","update_time","fromISO","filter","sort","a","b","useIsNoticeList","unreads","headLink","length","useEffect","document","title","onKeyDown","event","key","open","addEventListener","removeEventListener","JSON","stringify","isDefaultOpen","Box","m","display","flexDirection","bgcolor","FormControlLabel","label","control","Switch","checked","onChange","target","width","Button","variant","href","ListItem","ListItemAvatar","Badge","color","badgeContent","Avatar","Book","ListItemText","primary","secondary","toFormat","author_name","IgnoreDuration","Duration","fromObject","days","App","className","value","refreshInterval","fetcher","args","fetch","then","res","json","style","position","bottom","right","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0dab40a.chunk.js","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Avatar, Badge, Box, Button, FormControlLabel, ListItem, ListItemAvatar, ListItemText, Switch } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { Duration } from 'luxon';\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nexport function NarouUpdates({ ignoreDuration }: { ignoreDuration: Duration }) {\n  const host = new URLSearchParams(window.location.search).get('server') || 'http://localhost:7676';\n  console.log('host', host);\n\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(host, { ignoreDuration, enableR18 });\n\n  const unreads = useMemo(() => items?.filter(i => i.bookmark < i.latest), [items]);\n  const headLink = useMemo(() => (unreads && unreads.length > 0) ? nextLink(unreads[0]) : undefined, [unreads]);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads?.length}`;\n  }, [unreads]);\n\n  useEffect(() => {\n    if (headLink !== undefined) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          window.open(headLink, '_blank');\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [headLink]);\n\n  if (error) {\n    return <div>Server({JSON.stringify(host)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <div>Loading...</div>;\n  }\n\n  const isDefaultOpen = function (item: IsNoticeListItem): boolean {\n    if (!unreads) {\n      return false;\n    }\n    return unreads.length > 0 && item.base_url === unreads[0].base_url;\n  }\n\n  return (\n    <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      <p><FormControlLabel label=\"R18を含める\" control={<Switch checked={enableR18} onChange={(event) => setEnableR18(event.target.checked)} />} /></p>\n      <p>{`未読: ${unreads?.length} 作品.`}</p>\n      {items?.map(item => <Box key={item.base_url} width=\"100%\">\n        <Button\n          variant={isDefaultOpen(item) ? 'contained' : 'outlined'}\n          href={nextLink(item)} target=\"_blank\">\n          <ListItem>\n            <ListItemAvatar>\n              <Badge color=\"primary\" badgeContent={unread(item)}>\n                <Avatar>\n                  <Book color={item.isR18 ? \"secondary\" : undefined} />\n                </Avatar>\n              </Badge>\n            </ListItemAvatar>\n            <ListItemText\n              primary={hasUnread(item) ?\n                `${item.title} (${item.bookmark}/${item.latest})`\n                :\n                `${item.title} (${item.latest})`}\n              secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n          </ListItem>\n        </Button>\n      </Box>\n      )}\n    </Box>\n  );\n}\n","import useSWR from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime, Duration } from 'luxon';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  isR18: boolean;\n};\n\nexport function useIsNoticeList(\n  host: string,\n  { ignoreDuration, enableR18 }: { ignoreDuration: Duration, enableR18: boolean }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(`${host}/narou/isnoticelist`);\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? `${host}/r18/isnoticelist` : null);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const tooOld = DateTime.now().minus(ignoreDuration);\n\n      // なろう、R18のアイテムを混ぜて、古いアイテムを捨てて、更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .filter(i => i.update_time > tooOld)\n        .sort((a, b) => (a.update_time > b.update_time) ? -1 :\n          (a.update_time < b.update_time) ? 1 : 0\n        );\n      return n;\n    },\n    [raw_items, raw_items18, ignoreDuration]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime, Duration } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\n\nconst IgnoreDuration = Duration.fromObject({ days: 30 });\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n        fetcher: (args) => fetch(args).then(res => res.json())\n      }}>\n        <NarouUpdates ignoreDuration={IgnoreDuration} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\"\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}