{"version":3,"sources":["useIsNoticeList.tsx","NarouLoginForm.tsx","NarouUpdates.tsx","NarouApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["clearCache","mutate","NarouLoginForm","props","useState","userId","setUserId","password","setPassword","error","setError","postLogin","useCallback","a","api","login","res","ok","text","status","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","title","CardContent","Box","display","flexDirection","justifyContent","TextField","id","name","label","value","onChange","e","target","onKeyPress","key","type","inputRef","CardActions","style","variant","nextLink","item","bookmark","latest","base_url","itemSummary","fields","hasUnread","push","completed","join","unread","Math","max","badgeProps","color","badgeContent","OpenConfirmDialog","author_name","window","NarouUpdateList","server","onUnauthorized","enableR18","setEnableR18","useSWR","path","call","onErrorRetry","console","log","raw_items","data","raw_items18","error18","items","useMemo","undefined","score","i","Number","MAX_SAFE_INTEGER","map","isR18","update_time","DateTime","fromISO","sort","b","as","bs","useIsNoticeList","unreads","filter","length","confirm","setConfirm","selectedIndex","setSelectedIndex","defaultIndex","setDefaultIndex","useEffect","document","scrollIn","node","scrollIntoView","behavior","scrollMode","reduce","cur","prev","prevMin","index","defaultRef","onKeyDown","event","len","preventDefault","addEventListener","removeEventListener","buttonProps","component","href","JSON","stringify","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","m","disabled","bgcolor","List","ListItem","button","selected","ref","disableRipple","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","NarouUpdates","loginMode","setLoginMode","logout","NarouApi","this","replace","fetch","credentials","formData","FormData","append","method","body","json","App","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","cyan","setApi","location","host","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","CssBaseline","refreshInterval","bottom","right","fontSize","fontStyle","toISO","Typography","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea7fd202.chunk.js","sourcesContent":["import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n};\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18 }: { enableR18: boolean }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>('/narou/isnoticelist',\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? '/r18/isnoticelist' : null,\n    async path => api.call(path),\n  );\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items === undefined) {\n        return undefined;\n      }\n\n      const score = (i: IsNoticeListItem) => {\n        if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n        if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n        return i.latest - i.bookmark;\n      }\n\n      // なろう、R18のアイテムを混ぜて、未読があって少ない順にし、それが等しいときは更新日時降順にする\n      const n = [\n        ...raw_items.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }))\n        .sort((a, b) => {\n          const as = score(a);\n          const bs = score(b);\n          if (as > bs) return 1;\n          if (as < bs) return -1;\n          if (a.update_time < b.update_time) return 1;\n          if (a.update_time > b.update_time) return -1;\n          return 0;\n        });\n      return n;\n    },\n    [raw_items, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 };\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AppBar, Avatar, Badge, BadgeTypeMap, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, List, ListItem, ListItemAvatar, ListItemText, Switch, Toolbar } from '@material-ui/core';\nimport { Book } from '@material-ui/icons';\nimport { clearCache, IsNoticeListItem, useIsNoticeList } from './useIsNoticeList';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { NarouApi } from './NarouApi';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nfunction nextLink(item: IsNoticeListItem): string {\n  if (item.bookmark >= item.latest) {\n    return `${item.base_url}${item.latest}/`;\n  }\n  return `${item.base_url}${item.bookmark + 1}/`;\n}\n\nfunction hasUnread(item: IsNoticeListItem): boolean {\n  return item.latest > item.bookmark;\n}\n\nfunction itemSummary(item: IsNoticeListItem): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nfunction unread(item: IsNoticeListItem): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction OpenConfirmDialog({ item, onClose }: { item?: IsNoticeListItem, onClose: () => void }) {\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:{item?.author_name}</DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button variant=\"contained\" onClick={() => {\n          if (item) window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const [enableR18, setEnableR18] = useState(false);\n  const { data: items, error } = useIsNoticeList(server, { enableR18 });\n\n  const unreads = useMemo(() => items ? items.filter(i => i.bookmark < i.latest).length : 0, [items]);\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [defaultIndex, setDefaultIndex] = useState(-1);\n\n  useEffect(() => {\n    document.title = `なろう 未読:${unreads}`;\n  }, [unreads]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    // 未読数が少ない方が優先かつ、未読数が等しい場合は古い方優先\n    const [index] = items ?\n      items.reduce(([prev, prevMin], cur, i) => {\n        const unread = Math.max(cur.latest - cur.bookmark, 0);\n        if (unread && unread <= prevMin) {\n          return [i, unread];\n        }\n        return [prev, prevMin];\n      }, [-1, Number.MAX_SAFE_INTEGER])\n      : [-1];\n\n    setDefaultIndex(index);\n    setSelectedIndex(index);\n  }, [items]);\n\n  const defaultRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    if (items) {\n      const onKeyDown = (event: KeyboardEvent) => {\n        const len = items.length;\n        switch (event.key) {\n          case 'ArrowUp':\n            if (selectedIndex > 0) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i > 0 ? i - 1 : 0);\n            break;\n          case 'ArrowDown':\n            if (selectedIndex < len - 1) {\n              event.preventDefault();\n            }\n            setSelectedIndex(i => i < len ? i + 1 : len - 1);\n            break;\n          case 'Home':\n            setSelectedIndex(0);\n            break;\n          case 'End':\n            setSelectedIndex(len - 1);\n            break;\n          case 'Escape':\n            setSelectedIndex(defaultIndex);\n            break;\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [selectedIndex, defaultIndex, items]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        target: \"_blank\",\n      };\n    } else {\n      return { onClick: () => setConfirm(item) };\n    }\n  }, [setConfirm]);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div>Server({JSON.stringify(server)}) is not working...?</div>;\n  }\n  if (!items) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                  inputRef={defaultRef}\n                />}\n            />\n          </Box>\n          <Box m={2}>未読: {unreads}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={defaultIndex === selectedIndex}\n            onClick={() => setSelectedIndex(defaultIndex)}>最古の未読</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <List>\n          {items?.map((item, index) =>\n            <ListItem key={item.base_url} button={true}\n              {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n              disableRipple={true}\n              onFocusVisible={() => setSelectedIndex(index)}\n              {...buttonProps(item)} >\n              <ListItemAvatar>\n                <Badge overlap=\"circle\" {...badgeProps(item)} >\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={itemSummary(item)}\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n            </ListItem>)}\n        </List>\n      </Box >\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","type Api = '/narou/login' | '/narou/logout' | '/narou/isnoticelist' | '/r18/isnoticelist';\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    async fetch(api: Api): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(api: '/narou/isnoticelist' | '/r18/isnoticelist') {\n        const res = await this.fetch(api);\n        if (!res.ok) {\n            throw res;\n        }\n        return res.json();\n    }\n}","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    setApi(host ? new NarouApi(host) : null);\n  }, [])\n\n  if (!api) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        <NarouUpdates api={api} />\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}