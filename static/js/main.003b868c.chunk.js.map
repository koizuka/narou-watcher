{"version":3,"sources":["BookmarkSelector.tsx","narouApi/IsNoticeListItem.tsx","narouApi/NarouApi.ts","narouApi/useBookmarkInfo.ts","narouApi/useIsNoticeList.tsx","NarouLoginForm.tsx","narouApi/useNovelInfo.tsx","OpenConfirmDialog.tsx","reducer/ItemsState.tsx","useHotKeys.tsx","NarouUpdates.tsx","useAppBadge.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","color","icon","fill","withWidth","bookmarks","bookmark","setBookmark","onChangeBookmark","width","classes","useState","open","setOpen","large","isWidthUp","Select","disableUnderline","onOpen","onClose","value","onChange","event","Number","target","MenuItem","Object","keys","map","k","name","hasUnread","item","latest","nextLink","base_url","itemSummary","fields","title","push","completed","join","unread","Math","max","ApiError","status","message","Error","NarouApi","server","this","replace","api","a","fetch","credentials","id","password","formData","FormData","append","method","body","res","key","ok","text","json","maxPage","no","order","ncode","useBookmarkInfo","r18","useSWR","bookmarksR18","call","data","error","useMemo","reduce","d","num_items","clearCache","mutate","NarouLoginForm","props","userId","setUserId","setPassword","setError","postLogin","useCallback","login","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","CardContent","Box","display","flexDirection","justifyContent","TextField","label","e","onKeyPress","type","inputRef","CardActions","style","variant","useNovelInfo","info","m","match","console","warn","host","extractInfoPath","novelInfo","novelInfoR18","path","OpenConfirmDialog","bookmarkInfo","bookmark_no","isR18","log","bookmark_url","url","Link","href","author_url","author_name","size","window","InitialItemsState","numNewItems","selectedIndex","defaultIndex","itemsStateReducer","state","action","items","sort","b","cmps","f","c","ascend","compare","i","score","update_time","slice","head","index","filter","length","min","fa","fb","MAX_SAFE_INTEGER","toKeyString","shiftKey","undefined","ctrlKey","altKey","metaKey","s","useHotKeys","hotkeys","setHotkeys","useEffect","forEach","keyString","endsWith","split","reverse","elems","availableModifiers","some","includes","shouldBe","checkKeyString","onKeyDown","handler","document","addEventListener","removeEventListener","UserTopURL","theme","createStyles","backdrop","zIndex","drawer","badgeProps","badgeContent","maxPageValue","sw","NarouUpdateList","onUnauthorized","enableR18","setEnableR18","setMaxPage","isnoticelist","onErrorRetry","raw_items","bookmark_items","bookmark_error","isnoticelistR18","raw_items18","error18","raw_items2","Set","adds","is_notice","has","DateTime","fromISO","useIsNoticeList","rawItems","useReducer","dispatch","setSelectedIndex","confirm","setConfirm","navigator","setAppBadge","count","clearAppBadge","Promise","resolve","setClientBadge","clearClientBadge","scrollIn","node","scrollIntoView","behavior","scrollMode","defaultRef","setHotKeys","len","arrowUp","preventDefault","arrowDown","v","cur","numbers","nextBookmark","findIndex","prevBookmark","buttonProps","component","disabled","location","reload","JSON","stringify","baseUrl","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disableRipple","ref","alignItems","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","ListItemSecondaryAction","IconButton","edge","Info","right","bottom","Fab","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","App","prefersDarkMode","useMediaQuery","createTheme","palette","cyan","setApi","hostError","setHostError","URLSearchParams","search","get","protocol","test","hostname","pathname","ThemeProvider","Typography","CssBaseline","refreshInterval","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.003b868c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport {\n  isWidthUp, makeStyles, MenuItem,\n  Select,\n  withWidth\n} from '@material-ui/core';\nimport { BookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\n\n// prevent text/icon color to white when darkMode (since this Select is on the AppBar)\nconst useStyles = makeStyles({\n  root: {\n    color: 'black',\n  },\n  icon: {\n    fill: 'black',\n  },\n});\n\nfunction BookmarkSelector({ bookmarks, bookmark, onChangeBookmark: setBookmark, width }: {\n  bookmarks: BookmarkInfo | undefined;\n  bookmark: number;\n  onChangeBookmark: (newBookmark: number) => void;\n  width: Breakpoint;\n}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const large = isWidthUp('sm', width);\n\n  return (\n    <Select\n      classes={{ root: classes.root, icon: classes.icon }}\n      disableUnderline={true}\n      open={open} onOpen={() => setOpen(true)} onClose={() => setOpen(false)}\n      value={bookmark} onChange={event => setBookmark(Number(event.target.value))}>\n      <MenuItem key={0} value={0}>{open || large ? 'ブックマークなし' : 'BM-'}</MenuItem>\n      {bookmarks && Object.keys(bookmarks).map(k => <MenuItem key={k} value={k}>{open || large ? bookmarks[Number(k)].name : `BM${bookmark}`}</MenuItem>)}\n    </Select>\n  );\n}\n\nexport default withWidth()(BookmarkSelector);","import { DateTime } from 'luxon';\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n export function hasUnread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): boolean {\n  return item.latest > item.bookmark;\n}\n\nexport function nextLink(item: Pick<IsNoticeListItem, 'latest' | 'bookmark' | 'base_url'>): string {\n  if (hasUnread(item)) {\n    return `${item.base_url}${item.bookmark + 1}/`;\n  }\n  return `${item.base_url}${item.latest}/`;\n}\n\nexport function itemSummary(item: Pick<IsNoticeListItem, 'title' | 'bookmark' | 'latest' | 'completed'>): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nexport function unread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n","\n/**\n * bookmarkの並びを指定する\n * * 'updated_at' ブクマ更新順\n * * 'new' ブクマ追加順\n * * 'ncode' 新着Nコード順 \n * * 'newlist' 新着更新順\n */\ntype BookmarkOrder = 'updated_at' | 'new' | 'ncode' | 'newlist';\n\n/**\n * SWRのキーとして与え、 SWRのfetcherとして `key => NarouApi.call(key)` として渡す値。\n */\ntype NarouApiCallKey = string;\n\nexport class ApiError extends Error {\n    constructor(public status: number, message: string) {\n        super(message);\n        this.name = 'ApiError';\n    }\n}\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    get baseUrl(): string { return this.server; }\n\n    async fetch(api: string): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(key: NarouApiCallKey) {\n        const res = await this.fetch(key);\n        if (!res.ok) {\n            throw new ApiError(res.status, await res.text());\n        }\n        return res.json();\n    }\n\n    static isnoticelist({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/narou/isnoticelist?max_page=${maxPage}`;\n    }\n    static isnoticelistR18({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/r18/isnoticelist?max_page=${maxPage}`;\n    }\n\n    static bookmarks(): NarouApiCallKey {\n        return `/narou/bookmarks/`;\n    }\n    static bookmarksR18(): NarouApiCallKey {\n        return `/r18/bookmarks/`;\n    }\n\n    static bookmark(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/narou/bookmarks/${no}?order=${order}`;\n    }\n    static bookmarkR18(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/r18/bookmarks/${no}?order=${order}`;\n    }\n\n    static novelInfo(ncode: string): NarouApiCallKey {\n        return `/narou/novels/${ncode}`;\n    }\n    static novelInfoR18(ncode: string): NarouApiCallKey {\n        return `/r18/novels/${ncode}`;\n    }\n}","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\nimport { NarouApi } from \"./NarouApi\"\n\nexport type BookmarkInfo = {\n    [no: number]: {\n        name: string;\n        num_items: number;\n    }\n}\n\ntype BookmarkInfoRecord = {\n    no: number;\n    name: string;\n    num_items: number;\n}\n\nexport function useBookmarkInfo(api: NarouApi | null, r18: boolean) {\n    const { data, error } = useSWR<BookmarkInfoRecord[]>(\n        api ?\n            (r18 ? NarouApi.bookmarksR18() : NarouApi.bookmarks())\n            :\n            null,\n        async key => api ? api.call(key) : [],\n    )\n\n    const info: BookmarkInfo | undefined = useMemo(() => {\n        if (data) {\n            return data.reduce<BookmarkInfo>((a, d) => {\n                a[d.no] = {\n                    name: d.name,\n                    num_items: d.num_items,\n                };\n                return a;\n            }, {});\n        } else {\n            return undefined;\n        }\n    }, [data]);\n\n    return { data: info, error };\n}","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\nimport { IsNoticeListItem } from './IsNoticeListItem';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark = 0 }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark: number,\n    }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(NarouApi.isnoticelist({ maxPage }),\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark) ? NarouApi.bookmark(bookmark, { order }) : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? NarouApi.isnoticelistR18({ maxPage }) : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      // なろう、R18のアイテムを混ぜる\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }));\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { useCallback, useRef, useState } from 'react';\nimport { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { NarouApi } from './NarouApi';\nimport useSWR from 'swr';\nimport { useMemo } from 'react';\n\ntype NovelInfo = {\n  base_url: string;\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_url?: string;\n  bookmark_no?: number;\n  bookmark_episode?: number;\n};\n\nfunction extractInfoPath(base_url?: string): { host: string, ncode: string } | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([0-9a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    console.warn(`base_url is invalid: ${base_url}`);\n    return null;\n  }\n  const [, host, ncode] = m;\n  return { host, ncode };\n}\n\nexport function useNovelInfo(\n  api: NarouApi,\n  base_url?: string) {\n\n  const info = useMemo(() => extractInfoPath(base_url), [base_url]);\n  const key = useMemo(() => {\n    if (!info) {\n      return null;\n    }\n    switch (info.host) {\n      case 'ncode.syosetu.com':\n        return NarouApi.novelInfo(info.ncode);\n      case 'novel18.syosetu.com':\n        return NarouApi.novelInfoR18(info.ncode);\n      default:\n        console.warn(`unknown host: ${info.host}`);\n        return null;\n    }\n  }, [info])\n\n  const { data, error } = useSWR<NovelInfo>(key, async path => api.call(path));\n\n  return { data, error };\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Link\n} from '@material-ui/core';\nimport { useMemo } from 'react';\nimport { IsNoticeListItem, nextLink } from './narouApi/IsNoticeListItem';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { useNovelInfo } from './narouApi/useNovelInfo';\n\nexport function OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi;\n  item?: IsNoticeListItem;\n  onClose: () => void;\n}) {\n  const { data: novelInfo } = useNovelInfo(api, item?.base_url);\n  const { data: bookmarkInfo } = useBookmarkInfo(novelInfo?.bookmark_no ? api : null, item?.isR18 || false);\n\n  const bookmark = useMemo(() => {\n    console.log('novelInfo:', novelInfo);\n    console.log('bookmarkInfo:', bookmarkInfo);\n    const bookmark_no = novelInfo?.bookmark_no\n    if (bookmarkInfo && bookmark_no && novelInfo?.bookmark_url) {\n      return {\n        no: bookmark_no,\n        name: bookmarkInfo[bookmark_no].name,\n        url: novelInfo.bookmark_url,\n      };\n    }\n    return undefined;\n  }, [novelInfo, bookmarkInfo])\n\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={novelInfo?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      {bookmark && <DialogContent>ブックマーク:<Link href={bookmark.url} target=\"_blank\">{bookmark.name}</Link></DialogContent>}\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { IsNoticeListItem } from \"../narouApi/IsNoticeListItem\";\n\nexport type ItemsState = {\n  items?: IsNoticeListItem[];\n  numNewItems: number | null;\n  selectedIndex: number;\n  defaultIndex: number;\n};\n\nexport const InitialItemsState: ItemsState = {\n  numNewItems: null,\n  selectedIndex: -1,\n  defaultIndex: -1,\n};\n\nexport type StateAction =\n  | { type: 'set', items: IsNoticeListItem[] | undefined }\n  | { type: 'select', index: number }\n\nexport function itemsStateReducer(state: ItemsState, action: StateAction): ItemsState {\n  switch (action.type) {\n    case 'set':\n      {\n        if (!action.items) {\n          return InitialItemsState;\n        }\n\n        // 未読があって少ない順にし、未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n        const items = action.items.sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n          .slice(0, 30);\n\n        const head = items[0];\n        const index = head && head.bookmark < head.latest ? 0 : -1;\n        return {\n          ...state,\n          items,\n          numNewItems: items.filter(i => i.bookmark < i.latest).length,\n          selectedIndex: index,\n          defaultIndex: index,\n        };\n      }\n\n    case 'select':\n      return {\n        ...state,\n        selectedIndex: state.items ? Math.max(Math.min(action.index, state.items.length - 1), -1) : -1,\n      }\n  }\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nconst score = (i: IsNoticeListItem) => {\n  if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n  if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n  return i.latest - i.bookmark;\n}\n","import { useEffect, useState } from 'react';\n\nexport type HotKeys = {\n  [key: string]: (event: KeyboardEvent) => void;\n}\n\nfunction toKeyString(event: { key: string; shiftKey: boolean; ctrlKey: boolean; altKey: boolean; metaKey: boolean }): string {\n  return [\n    event.shiftKey ? 'shift' : undefined,\n    event.ctrlKey ? 'ctrl' : undefined,\n    event.altKey ? 'alt' : undefined,\n    event.metaKey ? 'meta' : undefined,\n    event.key,\n  ].filter(s => s !== undefined).join('+')\n}\n\nexport function checkKeyString(keyString: string) {\n  const [key, ...elems] =\n    keyString === '+'\n      ? ['+']\n      : keyString.endsWith('++')\n        ? ['+', ...keyString.slice(0, -2).split('+').reverse()]\n        : keyString.split('+').reverse();\n\n  const availableModifiers = ['shift', 'ctrl', 'alt', 'meta'];\n  if (elems.some(s => !availableModifiers.includes(s))) {\n    throw new Error(`HotKey(${keyString}): unknown modifiers: ${elems.filter(s => !availableModifiers.includes(s))}`);\n  }\n\n  const shouldBe = toKeyString({\n    key,\n    shiftKey: elems.some(s => s === 'shift'),\n    ctrlKey: elems.some(s => s === 'ctrl'),\n    altKey: elems.some(s => s === 'alt'),\n    metaKey: elems.some(s => s === 'meta'),\n  });\n\n  if (shouldBe !== keyString) {\n    throw new Error(`HotKey(${keyString}): invalid order: must be ${shouldBe} `);\n  }\n}\n\nexport function useHotKeys() {\n  const [hotkeys, setHotkeys] = useState<HotKeys>({});\n\n  useEffect(() => {\n    const keys = Object.keys(hotkeys);\n    if (keys.length > 0) {\n      keys.forEach(key => checkKeyString(key));\n\n      const onKeyDown = (event: KeyboardEvent) => {\n        const handler = hotkeys[toKeyString(event)];\n        if (handler) {\n          handler(event);\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [hotkeys]);\n\n  return [setHotkeys];\n}\n","import {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Theme,\n  Toolbar\n} from '@material-ui/core';\nimport { Book, Info } from '@material-ui/icons';\nimport { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport BookmarkSelector from './BookmarkSelector';\nimport { IsNoticeListItem, itemSummary, nextLink, unread } from \"./narouApi/IsNoticeListItem\";\nimport { NarouApi } from './narouApi/NarouApi';\nimport { BookmarkInfo, useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { clearCache, useIsNoticeList } from './narouApi/useIsNoticeList';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { OpenConfirmDialog } from './OpenConfirmDialog';\nimport { InitialItemsState, itemsStateReducer } from './reducer/ItemsState';\nimport { useAppBadge, useClientBadge } from './useAppBadge';\nimport { useHotKeys } from './useHotKeys';\n\nconst UserTopURL = 'https://syosetu.com/user/top/';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nexport function nextBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = Object.keys(bookmarks).map(k => Number(k));\n  for (const i of numbers) {\n    if (i > cur) {\n      return i;\n    }\n  }\n  return 0;\n}\n\nexport function prevBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = [0, ...Object.keys(bookmarks).map(k => Number(k))];\n  const i = numbers.findIndex(i => i >= cur);\n  if (i > 0) {\n    return numbers[i - 1];\n  }\n  return numbers[numbers.length - 1];\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark, setBookmark] = useState(0);\n\n  const { data: rawItems, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark });\n  const { data: bookmarks } = useBookmarkInfo(server, false);\n\n  const [{ items, numNewItems, selectedIndex, defaultIndex }, dispatch] = useReducer(itemsStateReducer, InitialItemsState)\n\n  useEffect(() => {\n    dispatch({ type: 'set', items: rawItems })\n  }, [rawItems]);\n  const setSelectedIndex = (index: number) => dispatch({ type: 'select', index });\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const { setAppBadge, clearAppBadge } = useAppBadge();\n  const { setClientBadge, clearClientBadge } = useClientBadge();\n\n  useEffect(() => {\n    if (numNewItems !== null) {\n      document.title = `なろう 未読:${numNewItems}`;\n      if (numNewItems) {\n        setAppBadge(numNewItems);\n        setClientBadge(numNewItems);\n      } else {\n        clearAppBadge();\n        clearClientBadge();\n      }\n    }\n  }, [clearAppBadge, clearClientBadge, numNewItems, setAppBadge, setClientBadge]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  const [setHotKeys] = useHotKeys();\n\n  useEffect(() => {\n    if (items) {\n      const len = items.length;\n      const arrowUp = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex - 1 });\n      }\n      const arrowDown = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex + 1 });\n      }\n\n      setHotKeys({\n        ...(selectedIndex > 0 && {\n          'ArrowUp': arrowUp,\n          'k': arrowUp,\n        }),\n        ...(selectedIndex < len - 1 && {\n          'ArrowDown': arrowDown,\n          'j': arrowDown,\n        }),\n        ...(len > 0 && {\n          'Home': () => setSelectedIndex(0),\n          'End': () => setSelectedIndex(len - 1),\n          'Escape': () => setSelectedIndex(defaultIndex),\n        }),\n        'r': () => setEnableR18(v => !v),\n        '1': () => setMaxPage(v => maxPageValue(v === maxPageValue(false))),\n        'h': () => window.open(UserTopURL, '_blank'),\n        ...(bookmarks && {\n          'b': () => setBookmark(nextBookmark(bookmarks, bookmark)),\n          'shift+B': () => setBookmark(prevBookmark(bookmarks, bookmark)),\n        })\n      });\n    }\n  }, [selectedIndex, defaultIndex, items, bookmarks, bookmark, setHotKeys]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { disabled: true };\n    }\n  }, []);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div onClick={() => window.location.reload()}>\n      <p>Server({JSON.stringify(server.baseUrl)}) is not working...?</p>\n      <p>status: {error.status}</p>\n      <code>{error.message}</code>\n    </div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return (\n    <>\n      <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Box>\n            <FormControlLabel\n              label=\"R18\"\n              control={\n                <Switch\n                  checked={enableR18}\n                  onChange={event => setEnableR18(event.target.checked)}\n                />}\n            />\n          </Box>\n          <Box>\n            <BookmarkSelector bookmarks={bookmarks} bookmark={bookmark} onChangeBookmark={setBookmark} />\n          </Box>\n          <Box m={2}>未読: {numNewItems ?? ''}</Box>\n          <Button\n            variant=\"contained\"\n            disabled={selectedIndex === 0}\n            disableRipple={true}\n            ref={defaultRef}\n            onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n        </Toolbar>\n      </AppBar>\n      <Box m={2} display=\"flex\" alignItems=\"center\" flexDirection=\"column\" bgcolor=\"background.paper\">\n        <Box maxWidth={600}>\n          <List>\n            {items?.map((item, index) =>\n              <ListItem key={item.base_url} button={true}\n                {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n                disableRipple={true}\n                onFocusVisible={() => setSelectedIndex(index)}\n                {...buttonProps(item)} >\n                <ListItemAvatar>\n                  <Badge overlap=\"circular\" {...badgeProps(item)} >\n                    <Avatar>\n                      <Book color={item.isR18 ? \"secondary\" : undefined} />\n                    </Avatar>\n                  </Badge>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={itemSummary(item)}\n                  secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" onClick={() => setConfirm(item)} disableRipple={true}>\n                    <Info />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>)}\n          </List>\n        </Box>\n        <Box position=\"fixed\" right=\"20px\" bottom=\"20px\">\n          <Fab\n            variant=\"extended\"\n            size=\"small\"\n            disableRipple={true}\n            component=\"a\"\n            href={UserTopURL}\n            target=\"_blank\"\n          >ユーザーホーム</Fab>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","export function useAppBadge(): { setAppBadge: (count?: number) => Promise<void>; clearAppBadge: () => Promise<void>; } {\n  if ('setAppBadge' in navigator && 'clearAppBadge' in navigator) {\n    return {\n      setAppBadge: (count) => (navigator as any).setAppBadge(count),\n      clearAppBadge: () => (navigator as any).clearAppBadge(),\n    };\n  } else {\n    return {\n      setAppBadge: () => Promise.resolve(),\n      clearAppBadge: () => Promise.resolve(),\n    };\n  }\n}\n\nexport function useClientBadge(): { setClientBadge: (count?: number) => Promise<void>; clearClientBadge: () => Promise<void>; } {\n  if ('setClientBadge' in navigator && 'clearClientBadge' in navigator) {\n    return {\n      setClientBadge: (count) => (navigator as any).setClientBadge(count),\n      clearClientBadge: () => (navigator as any).clearClientBadge(),\n    };\n  } else {\n    return {\n      setClientBadge: () => Promise.resolve(),\n      clearClientBadge: () => Promise.resolve(),\n    };\n  }\n}\n\n","//import './App.css';\nimport { SWRConfig } from 'swr';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro'\nimport { NarouUpdates } from './NarouUpdates';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@material-ui/core';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { cyan } from '@material-ui/core/colors';\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <ThemeProvider theme={theme}>\n        <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n        <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n      </ThemeProvider>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SWRConfig value={{\n        refreshInterval: PollingInterval,\n      }}>\n        {api && <NarouUpdates api={api} />}\n      </SWRConfig>\n      <div style={{\n        display: \"inline-block\",\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        fontSize: \"small\",\n        fontStyle: \"italic\",\n      }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}