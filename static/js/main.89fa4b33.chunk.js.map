{"version":3,"sources":["narouApi/NarouApi.ts","BookmarkSelector.tsx","narouApi/IsNoticeListItem.tsx","narouApi/useBookmarkInfo.ts","narouApi/useIsNoticeList.tsx","NarouLoginForm.tsx","narouApi/useNovelInfo.tsx","OpenConfirmDialog.tsx","reducer/ItemsState.tsx","useHotKeys.tsx","NarouUpdates.tsx","useAppBadge.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ApiError","status","message","name","Error","NarouApi","server","this","replace","api","a","fetch","credentials","id","password","formData","FormData","append","method","body","res","key","ok","text","json","maxPage","no","order","ncode","BookmarkSelector","bookmarks","bookmark","setBookmark","onChangeBookmark","useState","open","setOpen","large","breakpoint","theme","useTheme","useMediaQuery","breakpoints","up","useIsWidthUp","Select","disableUnderline","onOpen","onClose","value","onChange","event","Number","target","MenuItem","Object","keys","map","k","hasUnread","item","latest","nextLink","base_url","itemSummary","fields","title","push","completed","join","unread","Math","max","useBookmarkInfo","r18","useSWR","bookmarksR18","call","data","error","useMemo","reduce","d","num_items","clearCache","mutate","NarouLoginForm","props","userId","setUserId","setPassword","setError","postLogin","useCallback","login","statusText","onLogin","passwordRef","useRef","closeError","current","focus","Dialog","DialogTitle","DialogContent","DialogActions","Button","autoFocus","onClick","Container","maxWidth","Card","raised","CardHeader","CardContent","Box","display","flexDirection","justifyContent","TextField","label","e","onKeyPress","type","inputRef","CardActions","style","variant","useNovelInfo","info","m","match","console","warn","host","extractInfoPath","novelInfo","novelInfoR18","path","OpenConfirmDialog","bookmarkInfo","bookmark_no","isR18","log","bookmark_url","url","Link","href","author_url","author_name","size","window","InitialItemsState","numNewItems","selectedIndex","defaultIndex","itemsStateReducer","state","action","items","sort","b","cmps","f","c","ascend","compare","i","score","update_time","slice","head","index","filter","length","min","fa","fb","MAX_SAFE_INTEGER","toKeyString","shiftKey","undefined","ctrlKey","altKey","metaKey","s","useHotKeys","hotkeys","setHotkeys","useEffect","forEach","keyString","endsWith","split","reverse","elems","availableModifiers","some","includes","shouldBe","checkKeyString","onKeyDown","handler","document","addEventListener","removeEventListener","UserTopURL","useStyles","makeStyles","createStyles","backdrop","zIndex","drawer","color","badgeProps","badgeContent","maxPageValue","sw","NarouUpdateList","onUnauthorized","classes","enableR18","setEnableR18","setMaxPage","isnoticelist","onErrorRetry","raw_items","bookmark_items","bookmark_error","isnoticelistR18","raw_items18","error18","raw_items2","Set","adds","is_notice","has","DateTime","fromISO","useIsNoticeList","rawItems","useReducer","dispatch","setSelectedIndex","confirm","setConfirm","navigator","setAppBadge","count","clearAppBadge","Promise","resolve","setClientBadge","clearClientBadge","scrollIn","node","scrollIntoView","behavior","scrollMode","defaultRef","setHotKeys","len","arrowUp","preventDefault","arrowDown","v","cur","numbers","nextBookmark","findIndex","prevBookmark","buttonProps","component","disabled","location","reload","JSON","stringify","baseUrl","AppBar","position","Toolbar","FormControlLabel","control","Switch","checked","disableRipple","ref","alignItems","bgcolor","List","ListItem","button","selected","onFocusVisible","ListItemAvatar","Badge","overlap","Avatar","Book","ListItemText","primary","secondary","toFormat","ListItemSecondaryAction","IconButton","edge","Info","right","bottom","Fab","Backdrop","className","CircularProgress","NarouUpdates","loginMode","setLoginMode","logout","App","prefersDarkMode","createTheme","palette","mode","cyan","setApi","hostError","setHostError","URLSearchParams","search","get","protocol","test","hostname","pathname","StyledEngineProvider","injectFirst","ThemeProvider","Typography","CssBaseline","refreshInterval","fontSize","fontStyle","toISO","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89fa4b33.chunk.js","sourcesContent":["\n/**\n * bookmarkの並びを指定する\n * * 'updated_at' ブクマ更新順\n * * 'new' ブクマ追加順\n * * 'ncode' 新着Nコード順 \n * * 'newlist' 新着更新順\n */\ntype BookmarkOrder = 'updated_at' | 'new' | 'ncode' | 'newlist';\n\n/**\n * SWRのキーとして与え、 SWRのfetcherとして `key => NarouApi.call(key)` として渡す値。\n */\ntype NarouApiCallKey = string;\n\nexport class ApiError extends Error {\n    constructor(public status: number, message: string) {\n        super(message);\n        this.name = 'ApiError';\n    }\n}\n\nexport class NarouApi {\n    private server: string;\n\n    constructor(server: string) {\n        this.server = server.replace(/\\/$/, '');\n    }\n\n    get baseUrl(): string { return this.server; }\n\n    async fetch(api: string): Promise<Response> {\n        return fetch(`${this.server}${api}`, {\n            credentials: 'include',\n        });\n    }\n\n    async login(id: string, password: string): Promise<Response> {\n        const formData = new FormData();\n        formData.append('id', id);\n        formData.append('password', password);\n        const res: Response = await fetch(`${this.server}/narou/login`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include',\n        });\n        return res;\n    }\n\n    async logout(): Promise<void> {\n        await this.fetch('/narou/logout');\n    }\n\n    async call(key: NarouApiCallKey) {\n        const res = await this.fetch(key);\n        if (!res.ok) {\n            throw new ApiError(res.status, await res.text());\n        }\n        return res.json();\n    }\n\n    static isnoticelist({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/narou/isnoticelist?max_page=${maxPage}`;\n    }\n    static isnoticelistR18({ maxPage = 1 }: { maxPage: number }): NarouApiCallKey {\n        return `/r18/isnoticelist?max_page=${maxPage}`;\n    }\n\n    static bookmarks(): NarouApiCallKey {\n        return `/narou/bookmarks/`;\n    }\n    static bookmarksR18(): NarouApiCallKey {\n        return `/r18/bookmarks/`;\n    }\n\n    static bookmark(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/narou/bookmarks/${no}?order=${order}`;\n    }\n    static bookmarkR18(no: number, { order }: { order: BookmarkOrder }): NarouApiCallKey {\n        return `/r18/bookmarks/${no}?order=${order}`;\n    }\n\n    static novelInfo(ncode: string): NarouApiCallKey {\n        return `/narou/novels/${ncode}`;\n    }\n    static novelInfoR18(ncode: string): NarouApiCallKey {\n        return `/r18/novels/${ncode}`;\n    }\n}","import { MenuItem, Select, useMediaQuery } from '@mui/material';\nimport { Breakpoint, useTheme } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { BookmarkInfo } from './narouApi/useBookmarkInfo';\n\nfunction useIsWidthUp(breakpoint: Breakpoint) {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.up(breakpoint));\n}\n\nexport function BookmarkSelector({ bookmarks, bookmark, onChangeBookmark: setBookmark }: {\n  bookmarks: BookmarkInfo | undefined;\n  bookmark: number;\n  onChangeBookmark: (newBookmark: number) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  const large = useIsWidthUp('sm');\n\n  return (\n    <Select\n      disableUnderline={true}\n      open={open} onOpen={() => setOpen(true)} onClose={() => setOpen(false)}\n      value={bookmark} onChange={event => setBookmark(Number(event.target.value))}>\n      <MenuItem key={0} value={0}>{open || large ? 'ブックマークなし' : 'BM-'}</MenuItem>\n      {bookmarks && Object.keys(bookmarks).map(k => <MenuItem key={k} value={k}>{open || large ? bookmarks[Number(k)].name : `BM${bookmark}`}</MenuItem>)}\n    </Select>\n  );\n}","import { DateTime } from 'luxon';\n\nexport type IsNoticeListItem = {\n  base_url: string;\n  update_time: DateTime;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  isR18: boolean;\n};\n\n export function hasUnread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): boolean {\n  return item.latest > item.bookmark;\n}\n\nexport function nextLink(item: Pick<IsNoticeListItem, 'latest' | 'bookmark' | 'base_url'>): string {\n  if (hasUnread(item)) {\n    return `${item.base_url}${item.bookmark + 1}/`;\n  }\n  return `${item.base_url}${item.latest}/`;\n}\n\nexport function itemSummary(item: Pick<IsNoticeListItem, 'title' | 'bookmark' | 'latest' | 'completed'>): string {\n  const fields = [item.title, ' ('];\n  if (hasUnread(item)) {\n    fields.push(`${item.bookmark}/`);\n  }\n  fields.push(`${item.latest})`);\n  if (item.completed) {\n    fields.push('[完結]');\n  }\n  return fields.join('');\n}\n\nexport function unread(item: Pick<IsNoticeListItem, 'latest' | 'bookmark'>): number {\n  return Math.max(item.latest - item.bookmark, 0);\n}\n","import { useMemo } from \"react\"\nimport useSWR from \"swr\"\nimport { NarouApi } from \"./NarouApi\"\n\nexport type BookmarkInfo = {\n    [no: number]: {\n        name: string;\n        num_items: number;\n    }\n}\n\ntype BookmarkInfoRecord = {\n    no: number;\n    name: string;\n    num_items: number;\n}\n\nexport function useBookmarkInfo(api: NarouApi | null, r18: boolean) {\n    const { data, error } = useSWR<BookmarkInfoRecord[]>(\n        api ?\n            (r18 ? NarouApi.bookmarksR18() : NarouApi.bookmarks())\n            :\n            null,\n        async key => api ? api.call(key) : [],\n    )\n\n    const info: BookmarkInfo | undefined = useMemo(() => {\n        if (data) {\n            return data.reduce<BookmarkInfo>((a, d) => {\n                a[d.no] = {\n                    name: d.name,\n                    num_items: d.num_items,\n                };\n                return a;\n            }, {});\n        } else {\n            return undefined;\n        }\n    }, [data]);\n\n    return { data: info, error };\n}","import useSWR, { mutate } from 'swr';\nimport { useMemo } from 'react';\nimport { DateTime } from 'luxon';\nimport { NarouApi } from './NarouApi';\nimport { IsNoticeListItem } from './IsNoticeListItem';\n\ntype IsNoticeListRecord = {\n  base_url: string;\n  update_time: string;\n  bookmark: number;\n  latest: number;\n  title: string;\n  author_name: string;\n  completed?: boolean;\n  is_notice?: boolean; // only in bookmark\n};\n\n// login / logout したらキャッシュをすぐに消す\nexport function clearCache() {\n  mutate('/narou/isnoticelist');\n  mutate('/r18/isnoticelist');\n}\n\nexport function useIsNoticeList(\n  api: NarouApi,\n  { enableR18, maxPage = 1, bookmark = 0 }:\n    {\n      enableR18: boolean,\n      maxPage: number,\n      bookmark: number,\n    }\n) {\n  const { data: raw_items, error } = useSWR<IsNoticeListRecord[]>(NarouApi.isnoticelist({ maxPage }),\n    async path => api.call(path),\n    {\n      onErrorRetry: (error) => {\n        console.log('onErrorRetry:', error, error.status);\n      },\n    });\n\n  // order: updated_at:ブクマ更新順, new:ブクマ追加順\n  const order: 'updated_at' | 'new' = 'new';\n  const { data: bookmark_items, error: bookmark_error } = useSWR<IsNoticeListRecord[]>((!error && bookmark) ? NarouApi.bookmark(bookmark, { order }) : null,\n    async path => api.call(path),\n  );\n\n  const { data: raw_items18, error: error18 } = useSWR<IsNoticeListRecord[]>((!error && enableR18) ? NarouApi.isnoticelistR18({ maxPage }) : null,\n    async path => api.call(path),\n  );\n\n  // merge bookmark\n  const raw_items2 = useMemo(() => {\n    if (raw_items) {\n      if (bookmark_items) {\n        const keys = new Set(raw_items.map(i => i.base_url));\n        const adds = bookmark_items.filter(i => i.is_notice && !keys.has(i.base_url));\n        if (adds.length > 0) {\n          return [...raw_items, ...adds];\n        }\n      }\n    }\n    return raw_items;\n  }, [raw_items, bookmark_items]);\n\n  const items: IsNoticeListItem[] | undefined = useMemo(\n    () => {\n      if (raw_items2 === undefined) {\n        return undefined;\n      }\n\n      // なろう、R18のアイテムを混ぜる\n      const n = [\n        ...raw_items2.map(i => ({ ...i, isR18: false })),\n        ...(raw_items18 || []).map(i => ({ ...i, isR18: true }))\n      ].map(i => ({ ...i, update_time: DateTime.fromISO(i.update_time) }));\n      return n;\n    },\n    [raw_items2, raw_items18]\n  );\n\n  return { data: error ? undefined : items, error: error || error18 || bookmark_error };\n}\n","import { Box, Button, Card, CardActions, CardContent, CardHeader, Container, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport { useCallback, useRef, useState } from 'react';\nimport { NarouApi } from './narouApi/NarouApi';\n\nexport function NarouLoginForm(props: { api: NarouApi; onLogin: () => void; }) {\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string>('');\n\n  const postLogin = useCallback(async () => {\n    const res: Response = await props.api.login(userId, password);\n    if (!res.ok) {\n      const text = await res.text();\n      setError(`${res.status} ${res.statusText}\\n${text}`);\n    } else {\n      props.onLogin();\n    }\n  }, [userId, password, props]);\n\n  const passwordRef = useRef<HTMLInputElement>();\n\n  const closeError = useCallback(() => {\n    setError('');\n    passwordRef.current?.focus();\n  }, []);\n\n  return (<>\n    <Dialog open={error !== ''} onClose={() => closeError()}>\n      <DialogTitle>ログインできませんでした</DialogTitle>\n      <DialogContent>\n        <pre>{error}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={() => closeError()}>OK</Button>\n      </DialogActions>\n    </Dialog>\n    <Container maxWidth=\"sm\">\n      <Card raised={true} >\n        <CardHeader title=\"小説家になろうのログイン情報\">\n        </CardHeader>\n        <CardContent>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <TextField id=\"id\" name=\"id\" label=\"ID or email\" autoFocus\n              value={userId} onChange={e => setUserId(e.target.value)}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  passwordRef.current?.focus();\n                }\n              }} />\n            <TextField id=\"password\" name=\"password\" label=\"password\" type=\"password\"\n              value={password} onChange={e => setPassword(e.target.value)}\n              inputRef={passwordRef} onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  postLogin();\n                }\n              }} />\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: \"center\" }}>\n          <Button variant=\"contained\" onClick={postLogin}>login</Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </>);\n}\n","import { NarouApi } from './NarouApi';\nimport useSWR from 'swr';\nimport { useMemo } from 'react';\n\ntype NovelInfo = {\n  base_url: string;\n  title: string;\n  abstract: string;\n  author_name: string;\n  author_url: string;\n  keywords: string[];\n  bookmark_url?: string;\n  bookmark_no?: number;\n  bookmark_episode?: number;\n};\n\nfunction extractInfoPath(base_url?: string): { host: string, ncode: string } | null {\n  if (!base_url) {\n    return null;\n  }\n\n  const m = base_url.match(/https:\\/\\/([0-9a-zA-Z.]+)\\/([0-9a-z]+)\\/?/);\n  if (!m) {\n    console.warn(`base_url is invalid: ${base_url}`);\n    return null;\n  }\n  const [, host, ncode] = m;\n  return { host, ncode };\n}\n\nexport function useNovelInfo(\n  api: NarouApi,\n  base_url?: string) {\n\n  const info = useMemo(() => extractInfoPath(base_url), [base_url]);\n  const key = useMemo(() => {\n    if (!info) {\n      return null;\n    }\n    switch (info.host) {\n      case 'ncode.syosetu.com':\n        return NarouApi.novelInfo(info.ncode);\n      case 'novel18.syosetu.com':\n        return NarouApi.novelInfoR18(info.ncode);\n      default:\n        console.warn(`unknown host: ${info.host}`);\n        return null;\n    }\n  }, [info])\n\n  const { data, error } = useSWR<NovelInfo>(key, async path => api.call(path));\n\n  return { data, error };\n}\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Link\n} from '@mui/material';\nimport { useMemo } from 'react';\nimport { IsNoticeListItem, nextLink } from './narouApi/IsNoticeListItem';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { useNovelInfo } from './narouApi/useNovelInfo';\n\nexport function OpenConfirmDialog({ api, item, onClose }: {\n  api: NarouApi;\n  item?: IsNoticeListItem;\n  onClose: () => void;\n}) {\n  const { data: novelInfo } = useNovelInfo(api, item?.base_url);\n  const { data: bookmarkInfo } = useBookmarkInfo(novelInfo?.bookmark_no ? api : null, item?.isR18 || false);\n\n  const bookmark = useMemo(() => {\n    console.log('novelInfo:', novelInfo);\n    console.log('bookmarkInfo:', bookmarkInfo);\n    const bookmark_no = novelInfo?.bookmark_no\n    if (bookmarkInfo && bookmark_no && novelInfo?.bookmark_url) {\n      return {\n        no: bookmark_no,\n        name: bookmarkInfo[bookmark_no].name,\n        url: novelInfo.bookmark_url,\n      };\n    }\n    return undefined;\n  }, [novelInfo, bookmarkInfo])\n\n  return (\n    <Dialog open={!!item} onClose={onClose}>\n      <DialogTitle>{item?.title}</DialogTitle>\n      <DialogContent>作者:<Link href={novelInfo?.author_url} target=\"_blank\">{item?.author_name}</Link></DialogContent>\n      {bookmark && <DialogContent>ブックマーク:<Link href={bookmark.url} target=\"_blank\">{bookmark.name}</Link></DialogContent>}\n      <DialogActions>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(item.base_url, '_blank');\n          onClose();\n        }}>小説ページ</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => {\n          if (item)\n            window.open(nextLink(item), '_blank');\n          onClose();\n        }}>最新{item?.latest}部分</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={() => onClose()}>キャンセル</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { IsNoticeListItem } from \"../narouApi/IsNoticeListItem\";\n\nexport type ItemsState = {\n  items?: IsNoticeListItem[];\n  numNewItems: number | null;\n  selectedIndex: number;\n  defaultIndex: number;\n};\n\nexport const InitialItemsState: ItemsState = {\n  numNewItems: null,\n  selectedIndex: -1,\n  defaultIndex: -1,\n};\n\nexport type StateAction =\n  | { type: 'set', items: IsNoticeListItem[] | undefined }\n  | { type: 'select', index: number }\n\nexport function itemsStateReducer(state: ItemsState, action: StateAction): ItemsState {\n  switch (action.type) {\n    case 'set':\n      {\n        if (!action.items) {\n          return InitialItemsState;\n        }\n\n        // 未読があって少ない順にし、未読がある場合、同じ未読数同士は更新日時昇順、未読がない場合は更新日時降順\n        const items = action.items.sort((a, b) => {\n          return compare(a, b,\n            i => score(i),\n            a.bookmark < a.latest ?\n              i => i.update_time :\n              reverse(i => i.update_time),\n            i => i.base_url);\n        })\n          .slice(0, 30);\n\n        const head = items[0];\n        const index = head && head.bookmark < head.latest ? 0 : -1;\n        return {\n          ...state,\n          items,\n          numNewItems: items.filter(i => i.bookmark < i.latest).length,\n          selectedIndex: index,\n          defaultIndex: index,\n        };\n      }\n\n    case 'select':\n      return {\n        ...state,\n        selectedIndex: state.items ? Math.max(Math.min(action.index, state.items.length - 1), -1) : -1,\n      }\n  }\n}\n\n// sort用の比較関数\nfunction ascend<T>(a: T, b: T, f: (v: T) => any): -1 | 0 | 1 {\n  const fa = f(a), fb = f(b);\n  if (fa < fb) return -1;\n  if (fa > fb) return 1;\n  return 0;\n}\n\ntype Reverse<T> = {\n  f: (v: T) => any\n}\nfunction reverse<T>(f: (v: T) => any): Reverse<T> {\n  return { f };\n}\n\nfunction compare<T>(a: T, b: T, ...cmps: (((v: T) => any) | Reverse<T>)[]): -1 | 0 | 1 {\n  for (const f of cmps) {\n    let c;\n    if (typeof f === 'object') {\n      c = ascend(b, a, (f as Reverse<T>).f);\n    } else {\n      c = ascend(a, b, f);\n    }\n    if (c) return c;\n  }\n  return 0;\n}\n\nconst score = (i: IsNoticeListItem) => {\n  if (i.bookmark === i.latest) return Number.MAX_SAFE_INTEGER;\n  if (i.bookmark > i.latest) return Number.MAX_SAFE_INTEGER - 1;\n  return i.latest - i.bookmark;\n}\n","import { useEffect, useState } from 'react';\n\nexport type HotKeys = {\n  [key: string]: (event: KeyboardEvent) => void;\n}\n\nfunction toKeyString(event: { key: string; shiftKey: boolean; ctrlKey: boolean; altKey: boolean; metaKey: boolean }): string {\n  return [\n    event.shiftKey ? 'shift' : undefined,\n    event.ctrlKey ? 'ctrl' : undefined,\n    event.altKey ? 'alt' : undefined,\n    event.metaKey ? 'meta' : undefined,\n    event.key,\n  ].filter(s => s !== undefined).join('+')\n}\n\nexport function checkKeyString(keyString: string) {\n  const [key, ...elems] =\n    keyString === '+'\n      ? ['+']\n      : keyString.endsWith('++')\n        ? ['+', ...keyString.slice(0, -2).split('+').reverse()]\n        : keyString.split('+').reverse();\n\n  const availableModifiers = ['shift', 'ctrl', 'alt', 'meta'];\n  if (elems.some(s => !availableModifiers.includes(s))) {\n    throw new Error(`HotKey(${keyString}): unknown modifiers: ${elems.filter(s => !availableModifiers.includes(s))}`);\n  }\n\n  const shouldBe = toKeyString({\n    key,\n    shiftKey: elems.some(s => s === 'shift'),\n    ctrlKey: elems.some(s => s === 'ctrl'),\n    altKey: elems.some(s => s === 'alt'),\n    metaKey: elems.some(s => s === 'meta'),\n  });\n\n  if (shouldBe !== keyString) {\n    throw new Error(`HotKey(${keyString}): invalid order: must be ${shouldBe} `);\n  }\n}\n\nexport function useHotKeys() {\n  const [hotkeys, setHotkeys] = useState<HotKeys>({});\n\n  useEffect(() => {\n    const keys = Object.keys(hotkeys);\n    if (keys.length > 0) {\n      keys.forEach(key => checkKeyString(key));\n\n      const onKeyDown = (event: KeyboardEvent) => {\n        const handler = hotkeys[toKeyString(event)];\n        if (handler) {\n          handler(event);\n        }\n      };\n      document.addEventListener('keydown', onKeyDown, false);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n      };\n    }\n  }, [hotkeys]);\n\n  return [setHotkeys];\n}\n","import { Book, Info } from '@mui/icons-material';\nimport {\n  AppBar,\n  Avatar,\n  Backdrop,\n  Badge,\n  BadgeTypeMap,\n  Box,\n  Button,\n  CircularProgress,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Switch,\n  Theme,\n  Toolbar\n} from '@mui/material';\nimport createStyles from '@mui/styles/createStyles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { BookmarkSelector } from './BookmarkSelector';\nimport { IsNoticeListItem, itemSummary, nextLink, unread } from \"./narouApi/IsNoticeListItem\";\nimport { NarouApi } from './narouApi/NarouApi';\nimport { BookmarkInfo, useBookmarkInfo } from './narouApi/useBookmarkInfo';\nimport { clearCache, useIsNoticeList } from './narouApi/useIsNoticeList';\nimport { NarouLoginForm } from './NarouLoginForm';\nimport { OpenConfirmDialog } from './OpenConfirmDialog';\nimport { InitialItemsState, itemsStateReducer } from './reducer/ItemsState';\nimport { useAppBadge, useClientBadge } from './useAppBadge';\nimport { useHotKeys } from './useHotKeys';\n\nconst UserTopURL = 'https://syosetu.com/user/top/';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\nfunction badgeProps(item: IsNoticeListItem): BadgeTypeMap['props'] {\n  if (item.latest < item.bookmark) {\n    return { color: 'secondary', badgeContent: '!' };\n  }\n  return { color: 'primary', badgeContent: unread(item) };\n}\n\nfunction maxPageValue(sw: boolean): number {\n  return sw ? 2 : 1;\n}\n\nexport function nextBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = Object.keys(bookmarks).map(k => Number(k));\n  for (const i of numbers) {\n    if (i > cur) {\n      return i;\n    }\n  }\n  return 0;\n}\n\nexport function prevBookmark(bookmarks: BookmarkInfo, cur: number): number {\n  const numbers = [0, ...Object.keys(bookmarks).map(k => Number(k))];\n  const i = numbers.findIndex(i => i >= cur);\n  if (i > 0) {\n    return numbers[i - 1];\n  }\n  return numbers[numbers.length - 1];\n}\n\nfunction NarouUpdateList({ server, onUnauthorized }: { server: NarouApi, onUnauthorized: () => void }) {\n  const classes = useStyles();\n\n  const [enableR18, setEnableR18] = useState(false);\n  const [maxPage, setMaxPage] = useState(maxPageValue(false));\n  const [bookmark, setBookmark] = useState(0);\n\n  const { data: rawItems, error } = useIsNoticeList(server, { enableR18, maxPage, bookmark });\n  const { data: bookmarks } = useBookmarkInfo(server, false);\n\n  const [{ items, numNewItems, selectedIndex, defaultIndex }, dispatch] = useReducer(itemsStateReducer, InitialItemsState)\n\n  useEffect(() => {\n    dispatch({ type: 'set', items: rawItems })\n  }, [rawItems]);\n  const setSelectedIndex = (index: number) => dispatch({ type: 'select', index });\n\n  const [confirm, setConfirm] = useState<IsNoticeListItem | undefined>(undefined);\n\n  const { setAppBadge, clearAppBadge } = useAppBadge();\n  const { setClientBadge, clearClientBadge } = useClientBadge();\n\n  useEffect(() => {\n    if (numNewItems !== null) {\n      document.title = `なろう 未読:${numNewItems}`;\n      if (numNewItems) {\n        setAppBadge(numNewItems);\n        setClientBadge(numNewItems);\n      } else {\n        clearAppBadge();\n        clearClientBadge();\n      }\n    }\n  }, [clearAppBadge, clearClientBadge, numNewItems, setAppBadge, setClientBadge]);\n\n  const scrollIn = useCallback(node => {\n    if (node) {\n      scrollIntoView(node, { behavior: 'smooth', scrollMode: 'if-needed' });\n      node.focus();\n    }\n  }, []);\n\n  const defaultRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedIndex === -1) {\n      defaultRef.current?.focus();\n    }\n  }, [selectedIndex]);\n\n  const [setHotKeys] = useHotKeys();\n\n  useEffect(() => {\n    if (items) {\n      const len = items.length;\n      const arrowUp = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex - 1 });\n      }\n      const arrowDown = (event: KeyboardEvent) => {\n        event.preventDefault();\n        dispatch({ type: 'select', index: selectedIndex + 1 });\n      }\n\n      setHotKeys({\n        ...(selectedIndex > 0 && {\n          'ArrowUp': arrowUp,\n          'k': arrowUp,\n        }),\n        ...(selectedIndex < len - 1 && {\n          'ArrowDown': arrowDown,\n          'j': arrowDown,\n        }),\n        ...(len > 0 && {\n          'Home': () => setSelectedIndex(0),\n          'End': () => setSelectedIndex(len - 1),\n          'Escape': () => setSelectedIndex(defaultIndex),\n        }),\n        'r': () => setEnableR18(v => !v),\n        '1': () => setMaxPage(v => maxPageValue(v === maxPageValue(false))),\n        'h': () => window.open(UserTopURL, '_blank'),\n        ...(bookmarks && {\n          'b': () => setBookmark(nextBookmark(bookmarks, bookmark)),\n          'shift+B': () => setBookmark(prevBookmark(bookmarks, bookmark)),\n        })\n      });\n    }\n  }, [selectedIndex, defaultIndex, items, bookmarks, bookmark, setHotKeys]);\n\n  const buttonProps = useCallback((item: IsNoticeListItem) => {\n    if (unread(item) > 0) {\n      return {\n        component: 'a',\n        href: nextLink(item),\n        onClick: () => setSelectedIndex(-1), // workaround against remaining focus style\n        target: '_blank',\n      };\n    } else {\n      return { disabled: true };\n    }\n  }, []);\n\n  if (error) {\n    console.log('error =', error);\n    if (error.status === 401) {\n      onUnauthorized();\n    }\n    return <div onClick={() => window.location.reload()}>\n      <p>Server({JSON.stringify(server.baseUrl)}) is not working...?</p>\n      <p>status: {error.status}</p>\n      <code>{error.message}</code>\n    </div>;\n  }\n  if (!items) {\n    return <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  }\n\n  return <>\n    <OpenConfirmDialog api={server} item={confirm} onClose={() => setConfirm(undefined)} />\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Box>\n          <FormControlLabel\n            label=\"R18\"\n            control={\n              <Switch\n                checked={enableR18}\n                onChange={event => setEnableR18(event.target.checked)}\n              />}\n          />\n        </Box>\n        <Box>\n          <BookmarkSelector bookmarks={bookmarks} bookmark={bookmark} onChangeBookmark={setBookmark} />\n        </Box>\n        <Box m={2}>未読: {numNewItems ?? ''}</Box>\n        <Button\n          variant=\"contained\"\n          disabled={selectedIndex === 0}\n          disableRipple={true}\n          ref={defaultRef}\n          onClick={() => setSelectedIndex(defaultIndex)}>ESC</Button>\n      </Toolbar>\n    </AppBar>\n    <Box m={2} display=\"flex\" alignItems=\"center\" flexDirection=\"column\" bgcolor=\"background.paper\">\n      <Box maxWidth={600}>\n        <List>\n          {items?.map((item, index) =>\n            <ListItem key={item.base_url} button={true}\n              {...(index === selectedIndex ? { selected: true, ref: scrollIn } : {})}\n              disableRipple={true}\n              onFocusVisible={() => setSelectedIndex(index)}\n              {...buttonProps(item)} >\n              <ListItemAvatar>\n                <Badge overlap=\"circular\" {...badgeProps(item)} >\n                  <Avatar>\n                    <Book color={item.isR18 ? \"secondary\" : undefined} />\n                  </Avatar>\n                </Badge>\n              </ListItemAvatar>\n              <ListItemText\n                primary={itemSummary(item)}\n                secondary={`${item.update_time.toFormat('yyyy/LL/dd HH:mm')} 更新  作者:${item.author_name}`} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  onClick={() => setConfirm(item)}\n                  disableRipple={true}\n                  size=\"large\">\n                  <Info />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>)}\n        </List>\n      </Box>\n      <Box position=\"fixed\" right=\"20px\" bottom=\"20px\">\n        <Fab\n          variant=\"extended\"\n          size=\"small\"\n          disableRipple={true}\n          component=\"a\"\n          href={UserTopURL}\n          target=\"_blank\"\n        >ユーザーホーム</Fab>\n      </Box>\n    </Box>\n  </>;\n}\n\nexport function NarouUpdates({ api }: { api: NarouApi }) {\n  const [loginMode, setLoginMode] = useState(false);\n\n  if (loginMode) {\n    return <NarouLoginForm api={api} onLogin={() => {\n      console.log('logged in!');\n      clearCache();\n      setLoginMode(false);\n    }} />\n  }\n\n  return (\n    <>\n      <NarouUpdateList server={api}\n        onUnauthorized={() => {\n          clearCache();\n          setLoginMode(true)\n        }} />\n      <Button onClick={async () => {\n        await api.logout();\n        clearCache();\n        setLoginMode(true);\n      }}>logout</Button>\n    </>\n  );\n}\n","export function useAppBadge(): { setAppBadge: (count?: number) => Promise<void>; clearAppBadge: () => Promise<void>; } {\n  if ('setAppBadge' in navigator && 'clearAppBadge' in navigator) {\n    return {\n      setAppBadge: (count) => (navigator as any).setAppBadge(count),\n      clearAppBadge: () => (navigator as any).clearAppBadge(),\n    };\n  } else {\n    return {\n      setAppBadge: () => Promise.resolve(),\n      clearAppBadge: () => Promise.resolve(),\n    };\n  }\n}\n\nexport function useClientBadge(): { setClientBadge: (count?: number) => Promise<void>; clearClientBadge: () => Promise<void>; } {\n  if ('setClientBadge' in navigator && 'clearClientBadge' in navigator) {\n    return {\n      setClientBadge: (count) => (navigator as any).setClientBadge(count),\n      clearClientBadge: () => (navigator as any).clearClientBadge(),\n    };\n  } else {\n    return {\n      setClientBadge: () => Promise.resolve(),\n      clearClientBadge: () => Promise.resolve(),\n    };\n  }\n}\n\n","//import './App.css';\nimport { CssBaseline, Link, Typography, useMediaQuery } from '@mui/material';\nimport { cyan } from '@mui/material/colors';\nimport { createTheme, StyledEngineProvider, Theme, ThemeProvider } from '@mui/material/styles';\nimport { DateTime } from 'luxon';\nimport preval from 'preval.macro';\nimport { useEffect, useMemo, useState } from 'react';\nimport { SWRConfig } from 'swr';\nimport { NarouApi } from './narouApi/NarouApi';\nimport { NarouUpdates } from './NarouUpdates';\n\ndeclare module '@mui/styles/defaultTheme' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme { }\n}\n\nconst PollingInterval = 5 * 60 * 1000; // 5分ごとにポーリング\n\nconst buildDate: string = preval`module.exports = new Date().toISOString();`\n\nfunction getServerAddress(location: Location): string {\n  const server = new URLSearchParams(location.search).get('server')\n  if (server) {\n    return server;\n  }\n  if (location.protocol === 'http:') {\n    return 'http://localhost:7676';\n  }\n  // github.io であればAPIは置けないから除外\n  if (!/.*\\.github\\.io$/.test(location.hostname)) {\n    // 置いてるサイトにAPIがあると期待する\n    return location.protocol + '//' + location.host + location.pathname;\n  }\n  return '';\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: prefersDarkMode ? 'dark' : 'light',\n          primary: cyan,\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const [api, setApi] = useState<NarouApi | null>(null);\n  const [hostError, setHostError] = useState(false);\n  useEffect(() => {\n    const host = getServerAddress(document.location);\n    if (host) {\n      setApi(new NarouApi(host));\n    } else {\n      setHostError(true);\n    }\n  }, [])\n\n  if (hostError) {\n    return (\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <Typography>http以外の場合は必ず server クエリパラメータにサーバーアドレスを指定してください</Typography>\n          <Link href=\"https://github.com/koizuka/narou-watcher/\">GitHub</Link>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    );\n  }\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <SWRConfig value={{\n          refreshInterval: PollingInterval,\n        }}>\n          {api && <NarouUpdates api={api} />}\n        </SWRConfig>\n        <div style={{\n          display: \"inline-block\",\n          position: \"fixed\",\n          bottom: 0,\n          right: 0,\n          fontSize: \"small\",\n          fontStyle: \"italic\",\n        }}>narou-react: {DateTime.fromISO(buildDate).toISO()}</div>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}